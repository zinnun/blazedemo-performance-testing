/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 13174.0, "series": [{"data": [[0.0, 437.0], [0.1, 437.0], [0.2, 437.0], [0.3, 437.0], [0.4, 437.0], [0.5, 437.0], [0.6, 437.0], [0.7, 437.0], [0.8, 437.0], [0.9, 437.0], [1.0, 437.0], [1.1, 437.0], [1.2, 438.0], [1.3, 438.0], [1.4, 438.0], [1.5, 438.0], [1.6, 438.0], [1.7, 438.0], [1.8, 438.0], [1.9, 438.0], [2.0, 438.0], [2.1, 438.0], [2.2, 438.0], [2.3, 453.0], [2.4, 453.0], [2.5, 453.0], [2.6, 453.0], [2.7, 453.0], [2.8, 453.0], [2.9, 453.0], [3.0, 453.0], [3.1, 453.0], [3.2, 453.0], [3.3, 453.0], [3.4, 492.0], [3.5, 492.0], [3.6, 492.0], [3.7, 492.0], [3.8, 492.0], [3.9, 492.0], [4.0, 492.0], [4.1, 492.0], [4.2, 492.0], [4.3, 492.0], [4.4, 492.0], [4.5, 496.0], [4.6, 496.0], [4.7, 496.0], [4.8, 496.0], [4.9, 496.0], [5.0, 496.0], [5.1, 496.0], [5.2, 496.0], [5.3, 496.0], [5.4, 496.0], [5.5, 496.0], [5.6, 496.0], [5.7, 496.0], [5.8, 496.0], [5.9, 496.0], [6.0, 496.0], [6.1, 496.0], [6.2, 496.0], [6.3, 496.0], [6.4, 496.0], [6.5, 496.0], [6.6, 496.0], [6.7, 501.0], [6.8, 501.0], [6.9, 501.0], [7.0, 501.0], [7.1, 501.0], [7.2, 501.0], [7.3, 501.0], [7.4, 501.0], [7.5, 501.0], [7.6, 501.0], [7.7, 501.0], [7.8, 556.0], [7.9, 556.0], [8.0, 556.0], [8.1, 556.0], [8.2, 556.0], [8.3, 556.0], [8.4, 556.0], [8.5, 556.0], [8.6, 556.0], [8.7, 556.0], [8.8, 556.0], [8.9, 557.0], [9.0, 557.0], [9.1, 557.0], [9.2, 557.0], [9.3, 557.0], [9.4, 557.0], [9.5, 557.0], [9.6, 557.0], [9.7, 557.0], [9.8, 557.0], [9.9, 557.0], [10.0, 558.0], [10.1, 558.0], [10.2, 558.0], [10.3, 558.0], [10.4, 558.0], [10.5, 558.0], [10.6, 558.0], [10.7, 558.0], [10.8, 558.0], [10.9, 558.0], [11.0, 558.0], [11.1, 558.0], [11.2, 567.0], [11.3, 567.0], [11.4, 567.0], [11.5, 567.0], [11.6, 567.0], [11.7, 567.0], [11.8, 567.0], [11.9, 567.0], [12.0, 567.0], [12.1, 567.0], [12.2, 567.0], [12.3, 568.0], [12.4, 568.0], [12.5, 568.0], [12.6, 568.0], [12.7, 568.0], [12.8, 568.0], [12.9, 568.0], [13.0, 568.0], [13.1, 568.0], [13.2, 568.0], [13.3, 568.0], [13.4, 569.0], [13.5, 569.0], [13.6, 569.0], [13.7, 569.0], [13.8, 569.0], [13.9, 569.0], [14.0, 569.0], [14.1, 569.0], [14.2, 569.0], [14.3, 569.0], [14.4, 569.0], [14.5, 580.0], [14.6, 580.0], [14.7, 580.0], [14.8, 580.0], [14.9, 580.0], [15.0, 580.0], [15.1, 580.0], [15.2, 580.0], [15.3, 580.0], [15.4, 580.0], [15.5, 580.0], [15.6, 580.0], [15.7, 580.0], [15.8, 580.0], [15.9, 580.0], [16.0, 580.0], [16.1, 580.0], [16.2, 580.0], [16.3, 580.0], [16.4, 580.0], [16.5, 580.0], [16.6, 580.0], [16.7, 584.0], [16.8, 584.0], [16.9, 584.0], [17.0, 584.0], [17.1, 584.0], [17.2, 584.0], [17.3, 584.0], [17.4, 584.0], [17.5, 584.0], [17.6, 584.0], [17.7, 584.0], [17.8, 596.0], [17.9, 596.0], [18.0, 596.0], [18.1, 596.0], [18.2, 596.0], [18.3, 596.0], [18.4, 596.0], [18.5, 596.0], [18.6, 596.0], [18.7, 596.0], [18.8, 596.0], [18.9, 616.0], [19.0, 616.0], [19.1, 616.0], [19.2, 616.0], [19.3, 616.0], [19.4, 616.0], [19.5, 616.0], [19.6, 616.0], [19.7, 616.0], [19.8, 616.0], [19.9, 616.0], [20.0, 630.0], [20.1, 630.0], [20.2, 630.0], [20.3, 630.0], [20.4, 630.0], [20.5, 630.0], [20.6, 630.0], [20.7, 630.0], [20.8, 630.0], [20.9, 630.0], [21.0, 630.0], [21.1, 630.0], [21.2, 633.0], [21.3, 633.0], [21.4, 633.0], [21.5, 633.0], [21.6, 633.0], [21.7, 633.0], [21.8, 633.0], [21.9, 633.0], [22.0, 633.0], [22.1, 633.0], [22.2, 633.0], [22.3, 658.0], [22.4, 658.0], [22.5, 658.0], [22.6, 658.0], [22.7, 658.0], [22.8, 658.0], [22.9, 658.0], [23.0, 658.0], [23.1, 658.0], [23.2, 658.0], [23.3, 658.0], [23.4, 674.0], [23.5, 674.0], [23.6, 674.0], [23.7, 674.0], [23.8, 674.0], [23.9, 674.0], [24.0, 674.0], [24.1, 674.0], [24.2, 674.0], [24.3, 674.0], [24.4, 674.0], [24.5, 762.0], [24.6, 762.0], [24.7, 762.0], [24.8, 762.0], [24.9, 762.0], [25.0, 762.0], [25.1, 762.0], [25.2, 762.0], [25.3, 762.0], [25.4, 762.0], [25.5, 762.0], [25.6, 785.0], [25.7, 785.0], [25.8, 785.0], [25.9, 785.0], [26.0, 785.0], [26.1, 785.0], [26.2, 785.0], [26.3, 785.0], [26.4, 785.0], [26.5, 785.0], [26.6, 785.0], [26.7, 790.0], [26.8, 790.0], [26.9, 790.0], [27.0, 790.0], [27.1, 790.0], [27.2, 790.0], [27.3, 790.0], [27.4, 790.0], [27.5, 790.0], [27.6, 790.0], [27.7, 790.0], [27.8, 797.0], [27.9, 797.0], [28.0, 797.0], [28.1, 797.0], [28.2, 797.0], [28.3, 797.0], [28.4, 797.0], [28.5, 797.0], [28.6, 797.0], [28.7, 797.0], [28.8, 797.0], [28.9, 798.0], [29.0, 798.0], [29.1, 798.0], [29.2, 798.0], [29.3, 798.0], [29.4, 798.0], [29.5, 798.0], [29.6, 798.0], [29.7, 798.0], [29.8, 798.0], [29.9, 798.0], [30.0, 800.0], [30.1, 800.0], [30.2, 800.0], [30.3, 800.0], [30.4, 800.0], [30.5, 800.0], [30.6, 800.0], [30.7, 800.0], [30.8, 800.0], [30.9, 800.0], [31.0, 800.0], [31.1, 800.0], [31.2, 801.0], [31.3, 801.0], [31.4, 801.0], [31.5, 801.0], [31.6, 801.0], [31.7, 801.0], [31.8, 801.0], [31.9, 801.0], [32.0, 801.0], [32.1, 801.0], [32.2, 801.0], [32.3, 833.0], [32.4, 833.0], [32.5, 833.0], [32.6, 833.0], [32.7, 833.0], [32.8, 833.0], [32.9, 833.0], [33.0, 833.0], [33.1, 833.0], [33.2, 833.0], [33.3, 833.0], [33.4, 883.0], [33.5, 883.0], [33.6, 883.0], [33.7, 883.0], [33.8, 883.0], [33.9, 883.0], [34.0, 883.0], [34.1, 883.0], [34.2, 883.0], [34.3, 883.0], [34.4, 883.0], [34.5, 895.0], [34.6, 895.0], [34.7, 895.0], [34.8, 895.0], [34.9, 895.0], [35.0, 895.0], [35.1, 895.0], [35.2, 895.0], [35.3, 895.0], [35.4, 895.0], [35.5, 895.0], [35.6, 899.0], [35.7, 899.0], [35.8, 899.0], [35.9, 899.0], [36.0, 899.0], [36.1, 899.0], [36.2, 899.0], [36.3, 899.0], [36.4, 899.0], [36.5, 899.0], [36.6, 899.0], [36.7, 909.0], [36.8, 909.0], [36.9, 909.0], [37.0, 909.0], [37.1, 909.0], [37.2, 909.0], [37.3, 909.0], [37.4, 909.0], [37.5, 909.0], [37.6, 909.0], [37.7, 909.0], [37.8, 921.0], [37.9, 921.0], [38.0, 921.0], [38.1, 921.0], [38.2, 921.0], [38.3, 921.0], [38.4, 921.0], [38.5, 921.0], [38.6, 921.0], [38.7, 921.0], [38.8, 921.0], [38.9, 927.0], [39.0, 927.0], [39.1, 927.0], [39.2, 927.0], [39.3, 927.0], [39.4, 927.0], [39.5, 927.0], [39.6, 927.0], [39.7, 927.0], [39.8, 927.0], [39.9, 927.0], [40.0, 927.0], [40.1, 968.0], [40.2, 968.0], [40.3, 968.0], [40.4, 968.0], [40.5, 968.0], [40.6, 968.0], [40.7, 968.0], [40.8, 968.0], [40.9, 968.0], [41.0, 968.0], [41.1, 968.0], [41.2, 994.0], [41.3, 994.0], [41.4, 994.0], [41.5, 994.0], [41.6, 994.0], [41.7, 994.0], [41.8, 994.0], [41.9, 994.0], [42.0, 994.0], [42.1, 994.0], [42.2, 994.0], [42.3, 994.0], [42.4, 994.0], [42.5, 994.0], [42.6, 994.0], [42.7, 994.0], [42.8, 994.0], [42.9, 994.0], [43.0, 994.0], [43.1, 994.0], [43.2, 994.0], [43.3, 994.0], [43.4, 1011.0], [43.5, 1011.0], [43.6, 1011.0], [43.7, 1011.0], [43.8, 1011.0], [43.9, 1011.0], [44.0, 1011.0], [44.1, 1011.0], [44.2, 1011.0], [44.3, 1011.0], [44.4, 1011.0], [44.5, 1054.0], [44.6, 1054.0], [44.7, 1054.0], [44.8, 1054.0], [44.9, 1054.0], [45.0, 1054.0], [45.1, 1054.0], [45.2, 1054.0], [45.3, 1054.0], [45.4, 1054.0], [45.5, 1054.0], [45.6, 1070.0], [45.7, 1070.0], [45.8, 1070.0], [45.9, 1070.0], [46.0, 1070.0], [46.1, 1070.0], [46.2, 1070.0], [46.3, 1070.0], [46.4, 1070.0], [46.5, 1070.0], [46.6, 1070.0], [46.7, 1174.0], [46.8, 1174.0], [46.9, 1174.0], [47.0, 1174.0], [47.1, 1174.0], [47.2, 1174.0], [47.3, 1174.0], [47.4, 1174.0], [47.5, 1174.0], [47.6, 1174.0], [47.7, 1174.0], [47.8, 1202.0], [47.9, 1202.0], [48.0, 1202.0], [48.1, 1202.0], [48.2, 1202.0], [48.3, 1202.0], [48.4, 1202.0], [48.5, 1202.0], [48.6, 1202.0], [48.7, 1202.0], [48.8, 1202.0], [48.9, 1204.0], [49.0, 1204.0], [49.1, 1204.0], [49.2, 1204.0], [49.3, 1204.0], [49.4, 1204.0], [49.5, 1204.0], [49.6, 1204.0], [49.7, 1204.0], [49.8, 1204.0], [49.9, 1204.0], [50.0, 1204.0], [50.1, 1288.0], [50.2, 1288.0], [50.3, 1288.0], [50.4, 1288.0], [50.5, 1288.0], [50.6, 1288.0], [50.7, 1288.0], [50.8, 1288.0], [50.9, 1288.0], [51.0, 1288.0], [51.1, 1288.0], [51.2, 1460.0], [51.3, 1460.0], [51.4, 1460.0], [51.5, 1460.0], [51.6, 1460.0], [51.7, 1460.0], [51.8, 1460.0], [51.9, 1460.0], [52.0, 1460.0], [52.1, 1460.0], [52.2, 1460.0], [52.3, 1600.0], [52.4, 1600.0], [52.5, 1600.0], [52.6, 1600.0], [52.7, 1600.0], [52.8, 1600.0], [52.9, 1600.0], [53.0, 1600.0], [53.1, 1600.0], [53.2, 1600.0], [53.3, 1600.0], [53.4, 1710.0], [53.5, 1710.0], [53.6, 1710.0], [53.7, 1710.0], [53.8, 1710.0], [53.9, 1710.0], [54.0, 1710.0], [54.1, 1710.0], [54.2, 1710.0], [54.3, 1710.0], [54.4, 1710.0], [54.5, 1786.0], [54.6, 1786.0], [54.7, 1786.0], [54.8, 1786.0], [54.9, 1786.0], [55.0, 1786.0], [55.1, 1786.0], [55.2, 1786.0], [55.3, 1786.0], [55.4, 1786.0], [55.5, 1786.0], [55.6, 1993.0], [55.7, 1993.0], [55.8, 1993.0], [55.9, 1993.0], [56.0, 1993.0], [56.1, 1993.0], [56.2, 1993.0], [56.3, 1993.0], [56.4, 1993.0], [56.5, 1993.0], [56.6, 1993.0], [56.7, 2536.0], [56.8, 2536.0], [56.9, 2536.0], [57.0, 2536.0], [57.1, 2536.0], [57.2, 2536.0], [57.3, 2536.0], [57.4, 2536.0], [57.5, 2536.0], [57.6, 2536.0], [57.7, 2536.0], [57.8, 2919.0], [57.9, 2919.0], [58.0, 2919.0], [58.1, 2919.0], [58.2, 2919.0], [58.3, 2919.0], [58.4, 2919.0], [58.5, 2919.0], [58.6, 2919.0], [58.7, 2919.0], [58.8, 2919.0], [58.9, 2960.0], [59.0, 2960.0], [59.1, 2960.0], [59.2, 2960.0], [59.3, 2960.0], [59.4, 2960.0], [59.5, 2960.0], [59.6, 2960.0], [59.7, 2960.0], [59.8, 2960.0], [59.9, 2960.0], [60.0, 2960.0], [60.1, 2960.0], [60.2, 2960.0], [60.3, 2960.0], [60.4, 2960.0], [60.5, 2960.0], [60.6, 2960.0], [60.7, 2960.0], [60.8, 2960.0], [60.9, 2960.0], [61.0, 2960.0], [61.1, 2960.0], [61.2, 3162.0], [61.3, 3162.0], [61.4, 3162.0], [61.5, 3162.0], [61.6, 3162.0], [61.7, 3162.0], [61.8, 3162.0], [61.9, 3162.0], [62.0, 3162.0], [62.1, 3162.0], [62.2, 3162.0], [62.3, 3173.0], [62.4, 3173.0], [62.5, 3173.0], [62.6, 3173.0], [62.7, 3173.0], [62.8, 3173.0], [62.9, 3173.0], [63.0, 3173.0], [63.1, 3173.0], [63.2, 3173.0], [63.3, 3173.0], [63.4, 3173.0], [63.5, 3173.0], [63.6, 3173.0], [63.7, 3173.0], [63.8, 3173.0], [63.9, 3173.0], [64.0, 3173.0], [64.1, 3173.0], [64.2, 3173.0], [64.3, 3173.0], [64.4, 3173.0], [64.5, 3175.0], [64.6, 3175.0], [64.7, 3175.0], [64.8, 3175.0], [64.9, 3175.0], [65.0, 3175.0], [65.1, 3175.0], [65.2, 3175.0], [65.3, 3175.0], [65.4, 3175.0], [65.5, 3175.0], [65.6, 3211.0], [65.7, 3211.0], [65.8, 3211.0], [65.9, 3211.0], [66.0, 3211.0], [66.1, 3211.0], [66.2, 3211.0], [66.3, 3211.0], [66.4, 3211.0], [66.5, 3211.0], [66.6, 3211.0], [66.7, 3245.0], [66.8, 3245.0], [66.9, 3245.0], [67.0, 3245.0], [67.1, 3245.0], [67.2, 3245.0], [67.3, 3245.0], [67.4, 3245.0], [67.5, 3245.0], [67.6, 3245.0], [67.7, 3245.0], [67.8, 3282.0], [67.9, 3282.0], [68.0, 3282.0], [68.1, 3282.0], [68.2, 3282.0], [68.3, 3282.0], [68.4, 3282.0], [68.5, 3282.0], [68.6, 3282.0], [68.7, 3282.0], [68.8, 3282.0], [68.9, 3294.0], [69.0, 3294.0], [69.1, 3294.0], [69.2, 3294.0], [69.3, 3294.0], [69.4, 3294.0], [69.5, 3294.0], [69.6, 3294.0], [69.7, 3294.0], [69.8, 3294.0], [69.9, 3294.0], [70.0, 3294.0], [70.1, 3300.0], [70.2, 3300.0], [70.3, 3300.0], [70.4, 3300.0], [70.5, 3300.0], [70.6, 3300.0], [70.7, 3300.0], [70.8, 3300.0], [70.9, 3300.0], [71.0, 3300.0], [71.1, 3300.0], [71.2, 3307.0], [71.3, 3307.0], [71.4, 3307.0], [71.5, 3307.0], [71.6, 3307.0], [71.7, 3307.0], [71.8, 3307.0], [71.9, 3307.0], [72.0, 3307.0], [72.1, 3307.0], [72.2, 3307.0], [72.3, 3339.0], [72.4, 3339.0], [72.5, 3339.0], [72.6, 3339.0], [72.7, 3339.0], [72.8, 3339.0], [72.9, 3339.0], [73.0, 3339.0], [73.1, 3339.0], [73.2, 3339.0], [73.3, 3339.0], [73.4, 3401.0], [73.5, 3401.0], [73.6, 3401.0], [73.7, 3401.0], [73.8, 3401.0], [73.9, 3401.0], [74.0, 3401.0], [74.1, 3401.0], [74.2, 3401.0], [74.3, 3401.0], [74.4, 3401.0], [74.5, 3492.0], [74.6, 3492.0], [74.7, 3492.0], [74.8, 3492.0], [74.9, 3492.0], [75.0, 3492.0], [75.1, 3492.0], [75.2, 3492.0], [75.3, 3492.0], [75.4, 3492.0], [75.5, 3492.0], [75.6, 3561.0], [75.7, 3561.0], [75.8, 3561.0], [75.9, 3561.0], [76.0, 3561.0], [76.1, 3561.0], [76.2, 3561.0], [76.3, 3561.0], [76.4, 3561.0], [76.5, 3561.0], [76.6, 3561.0], [76.7, 4814.0], [76.8, 4814.0], [76.9, 4814.0], [77.0, 4814.0], [77.1, 4814.0], [77.2, 4814.0], [77.3, 4814.0], [77.4, 4814.0], [77.5, 4814.0], [77.6, 4814.0], [77.7, 4814.0], [77.8, 5244.0], [77.9, 5244.0], [78.0, 5244.0], [78.1, 5244.0], [78.2, 5244.0], [78.3, 5244.0], [78.4, 5244.0], [78.5, 5244.0], [78.6, 5244.0], [78.7, 5244.0], [78.8, 5244.0], [78.9, 5663.0], [79.0, 5663.0], [79.1, 5663.0], [79.2, 5663.0], [79.3, 5663.0], [79.4, 5663.0], [79.5, 5663.0], [79.6, 5663.0], [79.7, 5663.0], [79.8, 5663.0], [79.9, 5663.0], [80.0, 5663.0], [80.1, 6079.0], [80.2, 6079.0], [80.3, 6079.0], [80.4, 6079.0], [80.5, 6079.0], [80.6, 6079.0], [80.7, 6079.0], [80.8, 6079.0], [80.9, 6079.0], [81.0, 6079.0], [81.1, 6079.0], [81.2, 6663.0], [81.3, 6663.0], [81.4, 6663.0], [81.5, 6663.0], [81.6, 6663.0], [81.7, 6663.0], [81.8, 6663.0], [81.9, 6663.0], [82.0, 6663.0], [82.1, 6663.0], [82.2, 6663.0], [82.3, 6705.0], [82.4, 6705.0], [82.5, 6705.0], [82.6, 6705.0], [82.7, 6705.0], [82.8, 6705.0], [82.9, 6705.0], [83.0, 6705.0], [83.1, 6705.0], [83.2, 6705.0], [83.3, 6705.0], [83.4, 6720.0], [83.5, 6720.0], [83.6, 6720.0], [83.7, 6720.0], [83.8, 6720.0], [83.9, 6720.0], [84.0, 6720.0], [84.1, 6720.0], [84.2, 6720.0], [84.3, 6720.0], [84.4, 6720.0], [84.5, 6771.0], [84.6, 6771.0], [84.7, 6771.0], [84.8, 6771.0], [84.9, 6771.0], [85.0, 6771.0], [85.1, 6771.0], [85.2, 6771.0], [85.3, 6771.0], [85.4, 6771.0], [85.5, 6771.0], [85.6, 6830.0], [85.7, 6830.0], [85.8, 6830.0], [85.9, 6830.0], [86.0, 6830.0], [86.1, 6830.0], [86.2, 6830.0], [86.3, 6830.0], [86.4, 6830.0], [86.5, 6830.0], [86.6, 6830.0], [86.7, 6854.0], [86.8, 6854.0], [86.9, 6854.0], [87.0, 6854.0], [87.1, 6854.0], [87.2, 6854.0], [87.3, 6854.0], [87.4, 6854.0], [87.5, 6854.0], [87.6, 6854.0], [87.7, 6854.0], [87.8, 6895.0], [87.9, 6895.0], [88.0, 6895.0], [88.1, 6895.0], [88.2, 6895.0], [88.3, 6895.0], [88.4, 6895.0], [88.5, 6895.0], [88.6, 6895.0], [88.7, 6895.0], [88.8, 6895.0], [88.9, 6964.0], [89.0, 6964.0], [89.1, 6964.0], [89.2, 6964.0], [89.3, 6964.0], [89.4, 6964.0], [89.5, 6964.0], [89.6, 6964.0], [89.7, 6964.0], [89.8, 6964.0], [89.9, 6964.0], [90.0, 6964.0], [90.1, 7012.0], [90.2, 7012.0], [90.3, 7012.0], [90.4, 7012.0], [90.5, 7012.0], [90.6, 7012.0], [90.7, 7012.0], [90.8, 7012.0], [90.9, 7012.0], [91.0, 7012.0], [91.1, 7012.0], [91.2, 7214.0], [91.3, 7214.0], [91.4, 7214.0], [91.5, 7214.0], [91.6, 7214.0], [91.7, 7214.0], [91.8, 7214.0], [91.9, 7214.0], [92.0, 7214.0], [92.1, 7214.0], [92.2, 7214.0], [92.3, 7406.0], [92.4, 7406.0], [92.5, 7406.0], [92.6, 7406.0], [92.7, 7406.0], [92.8, 7406.0], [92.9, 7406.0], [93.0, 7406.0], [93.1, 7406.0], [93.2, 7406.0], [93.3, 7406.0], [93.4, 7457.0], [93.5, 7457.0], [93.6, 7457.0], [93.7, 7457.0], [93.8, 7457.0], [93.9, 7457.0], [94.0, 7457.0], [94.1, 7457.0], [94.2, 7457.0], [94.3, 7457.0], [94.4, 7457.0], [94.5, 7576.0], [94.6, 7576.0], [94.7, 7576.0], [94.8, 7576.0], [94.9, 7576.0], [95.0, 7576.0], [95.1, 7576.0], [95.2, 7576.0], [95.3, 7576.0], [95.4, 7576.0], [95.5, 7576.0], [95.6, 7978.0], [95.7, 7978.0], [95.8, 7978.0], [95.9, 7978.0], [96.0, 7978.0], [96.1, 7978.0], [96.2, 7978.0], [96.3, 7978.0], [96.4, 7978.0], [96.5, 7978.0], [96.6, 7978.0], [96.7, 9166.0], [96.8, 9166.0], [96.9, 9166.0], [97.0, 9166.0], [97.1, 9166.0], [97.2, 9166.0], [97.3, 9166.0], [97.4, 9166.0], [97.5, 9166.0], [97.6, 9166.0], [97.7, 9166.0], [97.8, 12459.0], [97.9, 12459.0], [98.0, 12459.0], [98.1, 12459.0], [98.2, 12459.0], [98.3, 12459.0], [98.4, 12459.0], [98.5, 12459.0], [98.6, 12459.0], [98.7, 12459.0], [98.8, 12459.0], [98.9, 13174.0], [99.0, 13174.0], [99.1, 13174.0], [99.2, 13174.0], [99.3, 13174.0], [99.4, 13174.0], [99.5, 13174.0], [99.6, 13174.0], [99.7, 13174.0], [99.8, 13174.0], [99.9, 13174.0], [100.0, 13174.0]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 0.0], [23.2, 0.0], [23.3, 0.0], [23.4, 0.0], [23.5, 0.0], [23.6, 0.0], [23.7, 0.0], [23.8, 0.0], [23.9, 0.0], [24.0, 0.0], [24.1, 0.0], [24.2, 0.0], [24.3, 0.0], [24.4, 0.0], [24.5, 0.0], [24.6, 0.0], [24.7, 0.0], [24.8, 0.0], [24.9, 0.0], [25.0, 0.0], [25.1, 0.0], [25.2, 0.0], [25.3, 0.0], [25.4, 0.0], [25.5, 0.0], [25.6, 0.0], [25.7, 0.0], [25.8, 0.0], [25.9, 0.0], [26.0, 0.0], [26.1, 0.0], [26.2, 0.0], [26.3, 0.0], [26.4, 0.0], [26.5, 0.0], [26.6, 0.0], [26.7, 0.0], [26.8, 0.0], [26.9, 0.0], [27.0, 0.0], [27.1, 0.0], [27.2, 0.0], [27.3, 0.0], [27.4, 0.0], [27.5, 0.0], [27.6, 0.0], [27.7, 0.0], [27.8, 0.0], [27.9, 0.0], [28.0, 0.0], [28.1, 0.0], [28.2, 0.0], [28.3, 0.0], [28.4, 0.0], [28.5, 0.0], [28.6, 0.0], [28.7, 0.0], [28.8, 0.0], [28.9, 0.0], [29.0, 0.0], [29.1, 0.0], [29.2, 0.0], [29.3, 0.0], [29.4, 0.0], [29.5, 0.0], [29.6, 0.0], [29.7, 0.0], [29.8, 0.0], [29.9, 0.0], [30.0, 0.0], [30.1, 0.0], [30.2, 0.0], [30.3, 0.0], [30.4, 0.0], [30.5, 0.0], [30.6, 0.0], [30.7, 0.0], [30.8, 0.0], [30.9, 0.0], [31.0, 0.0], [31.1, 0.0], [31.2, 0.0], [31.3, 0.0], [31.4, 0.0], [31.5, 0.0], [31.6, 0.0], [31.7, 0.0], [31.8, 0.0], [31.9, 0.0], [32.0, 0.0], [32.1, 0.0], [32.2, 0.0], [32.3, 0.0], [32.4, 0.0], [32.5, 0.0], [32.6, 0.0], [32.7, 0.0], [32.8, 0.0], [32.9, 0.0], [33.0, 0.0], [33.1, 0.0], [33.2, 0.0], [33.3, 0.0], [33.4, 0.0], [33.5, 0.0], [33.6, 0.0], [33.7, 0.0], [33.8, 0.0], [33.9, 0.0], [34.0, 0.0], [34.1, 0.0], [34.2, 0.0], [34.3, 0.0], [34.4, 0.0], [34.5, 0.0], [34.6, 0.0], [34.7, 0.0], [34.8, 0.0], [34.9, 0.0], [35.0, 0.0], [35.1, 0.0], [35.2, 0.0], [35.3, 0.0], [35.4, 0.0], [35.5, 0.0], [35.6, 0.0], [35.7, 0.0], [35.8, 0.0], [35.9, 0.0], [36.0, 0.0], [36.1, 0.0], [36.2, 0.0], [36.3, 0.0], [36.4, 0.0], [36.5, 0.0], [36.6, 0.0], [36.7, 0.0], [36.8, 0.0], [36.9, 0.0], [37.0, 0.0], [37.1, 0.0], [37.2, 0.0], [37.3, 0.0], [37.4, 0.0], [37.5, 0.0], [37.6, 0.0], [37.7, 0.0], [37.8, 0.0], [37.9, 0.0], [38.0, 0.0], [38.1, 0.0], [38.2, 0.0], [38.3, 0.0], [38.4, 0.0], [38.5, 0.0], [38.6, 0.0], [38.7, 0.0], [38.8, 0.0], [38.9, 0.0], [39.0, 0.0], [39.1, 0.0], [39.2, 0.0], [39.3, 0.0], [39.4, 0.0], [39.5, 0.0], [39.6, 0.0], [39.7, 0.0], [39.8, 0.0], [39.9, 0.0], [40.0, 0.0], [40.1, 0.0], [40.2, 0.0], [40.3, 0.0], [40.4, 0.0], [40.5, 0.0], [40.6, 0.0], [40.7, 0.0], [40.8, 0.0], [40.9, 0.0], [41.0, 0.0], [41.1, 0.0], [41.2, 0.0], [41.3, 0.0], [41.4, 0.0], [41.5, 0.0], [41.6, 0.0], [41.7, 0.0], [41.8, 0.0], [41.9, 0.0], [42.0, 0.0], [42.1, 0.0], [42.2, 0.0], [42.3, 0.0], [42.4, 0.0], [42.5, 0.0], [42.6, 0.0], [42.7, 0.0], [42.8, 0.0], [42.9, 0.0], [43.0, 0.0], [43.1, 0.0], [43.2, 0.0], [43.3, 0.0], [43.4, 0.0], [43.5, 0.0], [43.6, 0.0], [43.7, 0.0], [43.8, 0.0], [43.9, 0.0], [44.0, 0.0], [44.1, 0.0], [44.2, 0.0], [44.3, 0.0], [44.4, 0.0], [44.5, 0.0], [44.6, 0.0], [44.7, 0.0], [44.8, 0.0], [44.9, 0.0], [45.0, 0.0], [45.1, 0.0], [45.2, 0.0], [45.3, 0.0], [45.4, 0.0], [45.5, 0.0], [45.6, 0.0], [45.7, 0.0], [45.8, 0.0], [45.9, 0.0], [46.0, 0.0], [46.1, 0.0], [46.2, 0.0], [46.3, 0.0], [46.4, 0.0], [46.5, 0.0], [46.6, 0.0], [46.7, 0.0], [46.8, 0.0], [46.9, 0.0], [47.0, 0.0], [47.1, 0.0], [47.2, 0.0], [47.3, 0.0], [47.4, 0.0], [47.5, 0.0], [47.6, 0.0], [47.7, 0.0], [47.8, 0.0], [47.9, 0.0], [48.0, 0.0], [48.1, 0.0], [48.2, 0.0], [48.3, 0.0], [48.4, 0.0], [48.5, 0.0], [48.6, 0.0], [48.7, 0.0], [48.8, 0.0], [48.9, 0.0], [49.0, 0.0], [49.1, 0.0], [49.2, 0.0], [49.3, 0.0], [49.4, 0.0], [49.5, 0.0], [49.6, 0.0], [49.7, 0.0], [49.8, 0.0], [49.9, 0.0], [50.0, 0.0], [50.1, 0.0], [50.2, 0.0], [50.3, 0.0], [50.4, 0.0], [50.5, 0.0], [50.6, 0.0], [50.7, 0.0], [50.8, 0.0], [50.9, 0.0], [51.0, 0.0], [51.1, 0.0], [51.2, 0.0], [51.3, 0.0], [51.4, 0.0], [51.5, 0.0], [51.6, 0.0], [51.7, 0.0], [51.8, 0.0], [51.9, 0.0], [52.0, 0.0], [52.1, 0.0], [52.2, 0.0], [52.3, 0.0], [52.4, 0.0], [52.5, 0.0], [52.6, 0.0], [52.7, 0.0], [52.8, 0.0], [52.9, 0.0], [53.0, 0.0], [53.1, 0.0], [53.2, 0.0], [53.3, 0.0], [53.4, 0.0], [53.5, 0.0], [53.6, 0.0], [53.7, 0.0], [53.8, 0.0], [53.9, 0.0], [54.0, 0.0], [54.1, 0.0], [54.2, 0.0], [54.3, 0.0], [54.4, 0.0], [54.5, 0.0], [54.6, 0.0], [54.7, 0.0], [54.8, 0.0], [54.9, 0.0], [55.0, 0.0], [55.1, 0.0], [55.2, 0.0], [55.3, 0.0], [55.4, 0.0], [55.5, 0.0], [55.6, 0.0], [55.7, 0.0], [55.8, 0.0], [55.9, 0.0], [56.0, 0.0], [56.1, 0.0], [56.2, 0.0], [56.3, 0.0], [56.4, 0.0], [56.5, 0.0], [56.6, 0.0], [56.7, 0.0], [56.8, 0.0], [56.9, 0.0], [57.0, 0.0], [57.1, 0.0], [57.2, 0.0], [57.3, 0.0], [57.4, 0.0], [57.5, 0.0], [57.6, 0.0], [57.7, 0.0], [57.8, 0.0], [57.9, 0.0], [58.0, 0.0], [58.1, 0.0], [58.2, 0.0], [58.3, 0.0], [58.4, 0.0], [58.5, 0.0], [58.6, 0.0], [58.7, 0.0], [58.8, 0.0], [58.9, 0.0], [59.0, 0.0], [59.1, 0.0], [59.2, 0.0], [59.3, 0.0], [59.4, 0.0], [59.5, 0.0], [59.6, 0.0], [59.7, 0.0], [59.8, 0.0], [59.9, 0.0], [60.0, 0.0], [60.1, 0.0], [60.2, 0.0], [60.3, 0.0], [60.4, 0.0], [60.5, 0.0], [60.6, 0.0], [60.7, 0.0], [60.8, 0.0], [60.9, 0.0], [61.0, 0.0], [61.1, 0.0], [61.2, 0.0], [61.3, 0.0], [61.4, 0.0], [61.5, 0.0], [61.6, 0.0], [61.7, 0.0], [61.8, 0.0], [61.9, 0.0], [62.0, 0.0], [62.1, 0.0], [62.2, 0.0], [62.3, 0.0], [62.4, 0.0], [62.5, 0.0], [62.6, 0.0], [62.7, 0.0], [62.8, 0.0], [62.9, 0.0], [63.0, 0.0], [63.1, 0.0], [63.2, 0.0], [63.3, 0.0], [63.4, 0.0], [63.5, 0.0], [63.6, 0.0], [63.7, 0.0], [63.8, 0.0], [63.9, 0.0], [64.0, 0.0], [64.1, 0.0], [64.2, 0.0], [64.3, 0.0], [64.4, 0.0], [64.5, 0.0], [64.6, 0.0], [64.7, 0.0], [64.8, 0.0], [64.9, 0.0], [65.0, 0.0], [65.1, 0.0], [65.2, 0.0], [65.3, 0.0], [65.4, 0.0], [65.5, 0.0], [65.6, 0.0], [65.7, 0.0], [65.8, 0.0], [65.9, 0.0], [66.0, 0.0], [66.1, 0.0], [66.2, 0.0], [66.3, 0.0], [66.4, 0.0], [66.5, 0.0], [66.6, 0.0], [66.7, 0.0], [66.8, 0.0], [66.9, 0.0], [67.0, 0.0], [67.1, 0.0], [67.2, 0.0], [67.3, 0.0], [67.4, 0.0], [67.5, 0.0], [67.6, 0.0], [67.7, 0.0], [67.8, 0.0], [67.9, 0.0], [68.0, 0.0], [68.1, 0.0], [68.2, 0.0], [68.3, 0.0], [68.4, 0.0], [68.5, 0.0], [68.6, 0.0], [68.7, 0.0], [68.8, 0.0], [68.9, 0.0], [69.0, 0.0], [69.1, 0.0], [69.2, 0.0], [69.3, 0.0], [69.4, 0.0], [69.5, 0.0], [69.6, 0.0], [69.7, 0.0], [69.8, 0.0], [69.9, 0.0], [70.0, 0.0], [70.1, 0.0], [70.2, 0.0], [70.3, 0.0], [70.4, 0.0], [70.5, 0.0], [70.6, 0.0], [70.7, 0.0], [70.8, 0.0], [70.9, 0.0], [71.0, 0.0], [71.1, 0.0], [71.2, 0.0], [71.3, 0.0], [71.4, 0.0], [71.5, 0.0], [71.6, 0.0], [71.7, 0.0], [71.8, 0.0], [71.9, 0.0], [72.0, 0.0], [72.1, 0.0], [72.2, 0.0], [72.3, 0.0], [72.4, 0.0], [72.5, 0.0], [72.6, 0.0], [72.7, 0.0], [72.8, 0.0], [72.9, 0.0], [73.0, 0.0], [73.1, 0.0], [73.2, 0.0], [73.3, 0.0], [73.4, 0.0], [73.5, 0.0], [73.6, 0.0], [73.7, 0.0], [73.8, 0.0], [73.9, 0.0], [74.0, 0.0], [74.1, 0.0], [74.2, 0.0], [74.3, 0.0], [74.4, 0.0], [74.5, 0.0], [74.6, 0.0], [74.7, 0.0], [74.8, 0.0], [74.9, 0.0], [75.0, 0.0], [75.1, 0.0], [75.2, 0.0], [75.3, 0.0], [75.4, 0.0], [75.5, 0.0], [75.6, 0.0], [75.7, 0.0], [75.8, 0.0], [75.9, 0.0], [76.0, 0.0], [76.1, 0.0], [76.2, 0.0], [76.3, 0.0], [76.4, 0.0], [76.5, 0.0], [76.6, 0.0], [76.7, 0.0], [76.8, 0.0], [76.9, 0.0], [77.0, 0.0], [77.1, 0.0], [77.2, 0.0], [77.3, 0.0], [77.4, 0.0], [77.5, 0.0], [77.6, 0.0], [77.7, 0.0], [77.8, 0.0], [77.9, 0.0], [78.0, 0.0], [78.1, 0.0], [78.2, 0.0], [78.3, 0.0], [78.4, 0.0], [78.5, 0.0], [78.6, 0.0], [78.7, 0.0], [78.8, 0.0], [78.9, 0.0], [79.0, 0.0], [79.1, 0.0], [79.2, 0.0], [79.3, 0.0], [79.4, 0.0], [79.5, 0.0], [79.6, 0.0], [79.7, 0.0], [79.8, 0.0], [79.9, 0.0], [80.0, 0.0], [80.1, 0.0], [80.2, 0.0], [80.3, 0.0], [80.4, 0.0], [80.5, 0.0], [80.6, 0.0], [80.7, 0.0], [80.8, 0.0], [80.9, 0.0], [81.0, 0.0], [81.1, 0.0], [81.2, 0.0], [81.3, 0.0], [81.4, 0.0], [81.5, 0.0], [81.6, 0.0], [81.7, 0.0], [81.8, 0.0], [81.9, 0.0], [82.0, 0.0], [82.1, 0.0], [82.2, 0.0], [82.3, 0.0], [82.4, 0.0], [82.5, 0.0], [82.6, 0.0], [82.7, 0.0], [82.8, 0.0], [82.9, 0.0], [83.0, 0.0], [83.1, 0.0], [83.2, 0.0], [83.3, 0.0], [83.4, 0.0], [83.5, 0.0], [83.6, 0.0], [83.7, 0.0], [83.8, 0.0], [83.9, 0.0], [84.0, 0.0], [84.1, 0.0], [84.2, 0.0], [84.3, 0.0], [84.4, 0.0], [84.5, 0.0], [84.6, 0.0], [84.7, 0.0], [84.8, 0.0], [84.9, 0.0], [85.0, 0.0], [85.1, 0.0], [85.2, 0.0], [85.3, 0.0], [85.4, 0.0], [85.5, 0.0], [85.6, 0.0], [85.7, 0.0], [85.8, 0.0], [85.9, 0.0], [86.0, 0.0], [86.1, 0.0], [86.2, 0.0], [86.3, 0.0], [86.4, 0.0], [86.5, 0.0], [86.6, 0.0], [86.7, 0.0], [86.8, 0.0], [86.9, 0.0], [87.0, 0.0], [87.1, 0.0], [87.2, 0.0], [87.3, 0.0], [87.4, 0.0], [87.5, 0.0], [87.6, 0.0], [87.7, 0.0], [87.8, 0.0], [87.9, 0.0], [88.0, 0.0], [88.1, 0.0], [88.2, 0.0], [88.3, 0.0], [88.4, 0.0], [88.5, 0.0], [88.6, 0.0], [88.7, 0.0], [88.8, 0.0], [88.9, 0.0], [89.0, 0.0], [89.1, 0.0], [89.2, 0.0], [89.3, 0.0], [89.4, 0.0], [89.5, 0.0], [89.6, 0.0], [89.7, 0.0], [89.8, 0.0], [89.9, 0.0], [90.0, 1.0], [90.1, 1.0], [90.2, 1.0], [90.3, 1.0], [90.4, 1.0], [90.5, 1.0], [90.6, 1.0], [90.7, 1.0], [90.8, 1.0], [90.9, 1.0], [91.0, 1.0], [91.1, 1.0], [91.2, 1.0], [91.3, 1.0], [91.4, 1.0], [91.5, 1.0], [91.6, 1.0], [91.7, 1.0], [91.8, 1.0], [91.9, 1.0], [92.0, 1.0], [92.1, 1.0], [92.2, 1.0], [92.3, 1.0], [92.4, 1.0], [92.5, 1.0], [92.6, 1.0], [92.7, 1.0], [92.8, 1.0], [92.9, 1.0], [93.0, 1.0], [93.1, 1.0], [93.2, 1.0], [93.3, 1.0], [93.4, 1.0], [93.5, 1.0], [93.6, 1.0], [93.7, 1.0], [93.8, 1.0], [93.9, 1.0], [94.0, 1.0], [94.1, 1.0], [94.2, 1.0], [94.3, 1.0], [94.4, 1.0], [94.5, 1.0], [94.6, 1.0], [94.7, 1.0], [94.8, 1.0], [94.9, 1.0], [95.0, 1.0], [95.1, 1.0], [95.2, 1.0], [95.3, 1.0], [95.4, 1.0], [95.5, 1.0], [95.6, 1.0], [95.7, 1.0], [95.8, 1.0], [95.9, 1.0], [96.0, 1.0], [96.1, 1.0], [96.2, 1.0], [96.3, 1.0], [96.4, 1.0], [96.5, 1.0], [96.6, 1.0], [96.7, 1.0], [96.8, 1.0], [96.9, 1.0], [97.0, 1.0], [97.1, 1.0], [97.2, 1.0], [97.3, 1.0], [97.4, 1.0], [97.5, 1.0], [97.6, 1.0], [97.7, 1.0], [97.8, 1.0], [97.9, 1.0], [98.0, 1.0], [98.1, 1.0], [98.2, 1.0], [98.3, 1.0], [98.4, 1.0], [98.5, 1.0], [98.6, 1.0], [98.7, 1.0], [98.8, 1.0], [98.9, 1.0], [99.0, 1.0], [99.1, 1.0], [99.2, 1.0], [99.3, 1.0], [99.4, 1.0], [99.5, 1.0], [99.6, 1.0], [99.7, 1.0], [99.8, 1.0], [99.9, 1.0]], "isOverall": false, "label": "Debug Sampler", "isController": false}, {"data": [[0.0, 584.0], [0.1, 584.0], [0.2, 584.0], [0.3, 584.0], [0.4, 584.0], [0.5, 584.0], [0.6, 584.0], [0.7, 584.0], [0.8, 584.0], [0.9, 584.0], [1.0, 584.0], [1.1, 584.0], [1.2, 602.0], [1.3, 602.0], [1.4, 602.0], [1.5, 602.0], [1.6, 602.0], [1.7, 602.0], [1.8, 602.0], [1.9, 602.0], [2.0, 602.0], [2.1, 602.0], [2.2, 602.0], [2.3, 606.0], [2.4, 606.0], [2.5, 606.0], [2.6, 606.0], [2.7, 606.0], [2.8, 606.0], [2.9, 606.0], [3.0, 606.0], [3.1, 606.0], [3.2, 606.0], [3.3, 606.0], [3.4, 652.0], [3.5, 652.0], [3.6, 652.0], [3.7, 652.0], [3.8, 652.0], [3.9, 652.0], [4.0, 652.0], [4.1, 652.0], [4.2, 652.0], [4.3, 652.0], [4.4, 652.0], [4.5, 689.0], [4.6, 689.0], [4.7, 689.0], [4.8, 689.0], [4.9, 689.0], [5.0, 689.0], [5.1, 689.0], [5.2, 689.0], [5.3, 689.0], [5.4, 689.0], [5.5, 689.0], [5.6, 707.0], [5.7, 707.0], [5.8, 707.0], [5.9, 707.0], [6.0, 707.0], [6.1, 707.0], [6.2, 707.0], [6.3, 707.0], [6.4, 707.0], [6.5, 707.0], [6.6, 707.0], [6.7, 707.0], [6.8, 707.0], [6.9, 707.0], [7.0, 707.0], [7.1, 707.0], [7.2, 707.0], [7.3, 707.0], [7.4, 707.0], [7.5, 707.0], [7.6, 707.0], [7.7, 707.0], [7.8, 732.0], [7.9, 732.0], [8.0, 732.0], [8.1, 732.0], [8.2, 732.0], [8.3, 732.0], [8.4, 732.0], [8.5, 732.0], [8.6, 732.0], [8.7, 732.0], [8.8, 732.0], [8.9, 734.0], [9.0, 734.0], [9.1, 734.0], [9.2, 734.0], [9.3, 734.0], [9.4, 734.0], [9.5, 734.0], [9.6, 734.0], [9.7, 734.0], [9.8, 734.0], [9.9, 734.0], [10.0, 745.0], [10.1, 745.0], [10.2, 745.0], [10.3, 745.0], [10.4, 745.0], [10.5, 745.0], [10.6, 745.0], [10.7, 745.0], [10.8, 745.0], [10.9, 745.0], [11.0, 745.0], [11.1, 745.0], [11.2, 750.0], [11.3, 750.0], [11.4, 750.0], [11.5, 750.0], [11.6, 750.0], [11.7, 750.0], [11.8, 750.0], [11.9, 750.0], [12.0, 750.0], [12.1, 750.0], [12.2, 750.0], [12.3, 750.0], [12.4, 750.0], [12.5, 750.0], [12.6, 750.0], [12.7, 750.0], [12.8, 750.0], [12.9, 750.0], [13.0, 750.0], [13.1, 750.0], [13.2, 750.0], [13.3, 750.0], [13.4, 758.0], [13.5, 758.0], [13.6, 758.0], [13.7, 758.0], [13.8, 758.0], [13.9, 758.0], [14.0, 758.0], [14.1, 758.0], [14.2, 758.0], [14.3, 758.0], [14.4, 758.0], [14.5, 773.0], [14.6, 773.0], [14.7, 773.0], [14.8, 773.0], [14.9, 773.0], [15.0, 773.0], [15.1, 773.0], [15.2, 773.0], [15.3, 773.0], [15.4, 773.0], [15.5, 773.0], [15.6, 775.0], [15.7, 775.0], [15.8, 775.0], [15.9, 775.0], [16.0, 775.0], [16.1, 775.0], [16.2, 775.0], [16.3, 775.0], [16.4, 775.0], [16.5, 775.0], [16.6, 775.0], [16.7, 795.0], [16.8, 795.0], [16.9, 795.0], [17.0, 795.0], [17.1, 795.0], [17.2, 795.0], [17.3, 795.0], [17.4, 795.0], [17.5, 795.0], [17.6, 795.0], [17.7, 795.0], [17.8, 796.0], [17.9, 796.0], [18.0, 796.0], [18.1, 796.0], [18.2, 796.0], [18.3, 796.0], [18.4, 796.0], [18.5, 796.0], [18.6, 796.0], [18.7, 796.0], [18.8, 796.0], [18.9, 798.0], [19.0, 798.0], [19.1, 798.0], [19.2, 798.0], [19.3, 798.0], [19.4, 798.0], [19.5, 798.0], [19.6, 798.0], [19.7, 798.0], [19.8, 798.0], [19.9, 798.0], [20.0, 803.0], [20.1, 803.0], [20.2, 803.0], [20.3, 803.0], [20.4, 803.0], [20.5, 803.0], [20.6, 803.0], [20.7, 803.0], [20.8, 803.0], [20.9, 803.0], [21.0, 803.0], [21.1, 803.0], [21.2, 816.0], [21.3, 816.0], [21.4, 816.0], [21.5, 816.0], [21.6, 816.0], [21.7, 816.0], [21.8, 816.0], [21.9, 816.0], [22.0, 816.0], [22.1, 816.0], [22.2, 816.0], [22.3, 846.0], [22.4, 846.0], [22.5, 846.0], [22.6, 846.0], [22.7, 846.0], [22.8, 846.0], [22.9, 846.0], [23.0, 846.0], [23.1, 846.0], [23.2, 846.0], [23.3, 846.0], [23.4, 878.0], [23.5, 878.0], [23.6, 878.0], [23.7, 878.0], [23.8, 878.0], [23.9, 878.0], [24.0, 878.0], [24.1, 878.0], [24.2, 878.0], [24.3, 878.0], [24.4, 878.0], [24.5, 957.0], [24.6, 957.0], [24.7, 957.0], [24.8, 957.0], [24.9, 957.0], [25.0, 957.0], [25.1, 957.0], [25.2, 957.0], [25.3, 957.0], [25.4, 957.0], [25.5, 957.0], [25.6, 990.0], [25.7, 990.0], [25.8, 990.0], [25.9, 990.0], [26.0, 990.0], [26.1, 990.0], [26.2, 990.0], [26.3, 990.0], [26.4, 990.0], [26.5, 990.0], [26.6, 990.0], [26.7, 1058.0], [26.8, 1058.0], [26.9, 1058.0], [27.0, 1058.0], [27.1, 1058.0], [27.2, 1058.0], [27.3, 1058.0], [27.4, 1058.0], [27.5, 1058.0], [27.6, 1058.0], [27.7, 1058.0], [27.8, 1080.0], [27.9, 1080.0], [28.0, 1080.0], [28.1, 1080.0], [28.2, 1080.0], [28.3, 1080.0], [28.4, 1080.0], [28.5, 1080.0], [28.6, 1080.0], [28.7, 1080.0], [28.8, 1080.0], [28.9, 1087.0], [29.0, 1087.0], [29.1, 1087.0], [29.2, 1087.0], [29.3, 1087.0], [29.4, 1087.0], [29.5, 1087.0], [29.6, 1087.0], [29.7, 1087.0], [29.8, 1087.0], [29.9, 1087.0], [30.0, 1128.0], [30.1, 1128.0], [30.2, 1128.0], [30.3, 1128.0], [30.4, 1128.0], [30.5, 1128.0], [30.6, 1128.0], [30.7, 1128.0], [30.8, 1128.0], [30.9, 1128.0], [31.0, 1128.0], [31.1, 1128.0], [31.2, 1144.0], [31.3, 1144.0], [31.4, 1144.0], [31.5, 1144.0], [31.6, 1144.0], [31.7, 1144.0], [31.8, 1144.0], [31.9, 1144.0], [32.0, 1144.0], [32.1, 1144.0], [32.2, 1144.0], [32.3, 1161.0], [32.4, 1161.0], [32.5, 1161.0], [32.6, 1161.0], [32.7, 1161.0], [32.8, 1161.0], [32.9, 1161.0], [33.0, 1161.0], [33.1, 1161.0], [33.2, 1161.0], [33.3, 1161.0], [33.4, 1171.0], [33.5, 1171.0], [33.6, 1171.0], [33.7, 1171.0], [33.8, 1171.0], [33.9, 1171.0], [34.0, 1171.0], [34.1, 1171.0], [34.2, 1171.0], [34.3, 1171.0], [34.4, 1171.0], [34.5, 1197.0], [34.6, 1197.0], [34.7, 1197.0], [34.8, 1197.0], [34.9, 1197.0], [35.0, 1197.0], [35.1, 1197.0], [35.2, 1197.0], [35.3, 1197.0], [35.4, 1197.0], [35.5, 1197.0], [35.6, 1210.0], [35.7, 1210.0], [35.8, 1210.0], [35.9, 1210.0], [36.0, 1210.0], [36.1, 1210.0], [36.2, 1210.0], [36.3, 1210.0], [36.4, 1210.0], [36.5, 1210.0], [36.6, 1210.0], [36.7, 1217.0], [36.8, 1217.0], [36.9, 1217.0], [37.0, 1217.0], [37.1, 1217.0], [37.2, 1217.0], [37.3, 1217.0], [37.4, 1217.0], [37.5, 1217.0], [37.6, 1217.0], [37.7, 1217.0], [37.8, 1218.0], [37.9, 1218.0], [38.0, 1218.0], [38.1, 1218.0], [38.2, 1218.0], [38.3, 1218.0], [38.4, 1218.0], [38.5, 1218.0], [38.6, 1218.0], [38.7, 1218.0], [38.8, 1218.0], [38.9, 1236.0], [39.0, 1236.0], [39.1, 1236.0], [39.2, 1236.0], [39.3, 1236.0], [39.4, 1236.0], [39.5, 1236.0], [39.6, 1236.0], [39.7, 1236.0], [39.8, 1236.0], [39.9, 1236.0], [40.0, 1236.0], [40.1, 1244.0], [40.2, 1244.0], [40.3, 1244.0], [40.4, 1244.0], [40.5, 1244.0], [40.6, 1244.0], [40.7, 1244.0], [40.8, 1244.0], [40.9, 1244.0], [41.0, 1244.0], [41.1, 1244.0], [41.2, 1247.0], [41.3, 1247.0], [41.4, 1247.0], [41.5, 1247.0], [41.6, 1247.0], [41.7, 1247.0], [41.8, 1247.0], [41.9, 1247.0], [42.0, 1247.0], [42.1, 1247.0], [42.2, 1247.0], [42.3, 1302.0], [42.4, 1302.0], [42.5, 1302.0], [42.6, 1302.0], [42.7, 1302.0], [42.8, 1302.0], [42.9, 1302.0], [43.0, 1302.0], [43.1, 1302.0], [43.2, 1302.0], [43.3, 1302.0], [43.4, 1303.0], [43.5, 1303.0], [43.6, 1303.0], [43.7, 1303.0], [43.8, 1303.0], [43.9, 1303.0], [44.0, 1303.0], [44.1, 1303.0], [44.2, 1303.0], [44.3, 1303.0], [44.4, 1303.0], [44.5, 1305.0], [44.6, 1305.0], [44.7, 1305.0], [44.8, 1305.0], [44.9, 1305.0], [45.0, 1305.0], [45.1, 1305.0], [45.2, 1305.0], [45.3, 1305.0], [45.4, 1305.0], [45.5, 1305.0], [45.6, 1305.0], [45.7, 1305.0], [45.8, 1305.0], [45.9, 1305.0], [46.0, 1305.0], [46.1, 1305.0], [46.2, 1305.0], [46.3, 1305.0], [46.4, 1305.0], [46.5, 1305.0], [46.6, 1305.0], [46.7, 1311.0], [46.8, 1311.0], [46.9, 1311.0], [47.0, 1311.0], [47.1, 1311.0], [47.2, 1311.0], [47.3, 1311.0], [47.4, 1311.0], [47.5, 1311.0], [47.6, 1311.0], [47.7, 1311.0], [47.8, 1314.0], [47.9, 1314.0], [48.0, 1314.0], [48.1, 1314.0], [48.2, 1314.0], [48.3, 1314.0], [48.4, 1314.0], [48.5, 1314.0], [48.6, 1314.0], [48.7, 1314.0], [48.8, 1314.0], [48.9, 1319.0], [49.0, 1319.0], [49.1, 1319.0], [49.2, 1319.0], [49.3, 1319.0], [49.4, 1319.0], [49.5, 1319.0], [49.6, 1319.0], [49.7, 1319.0], [49.8, 1319.0], [49.9, 1319.0], [50.0, 1319.0], [50.1, 1320.0], [50.2, 1320.0], [50.3, 1320.0], [50.4, 1320.0], [50.5, 1320.0], [50.6, 1320.0], [50.7, 1320.0], [50.8, 1320.0], [50.9, 1320.0], [51.0, 1320.0], [51.1, 1320.0], [51.2, 1341.0], [51.3, 1341.0], [51.4, 1341.0], [51.5, 1341.0], [51.6, 1341.0], [51.7, 1341.0], [51.8, 1341.0], [51.9, 1341.0], [52.0, 1341.0], [52.1, 1341.0], [52.2, 1341.0], [52.3, 1344.0], [52.4, 1344.0], [52.5, 1344.0], [52.6, 1344.0], [52.7, 1344.0], [52.8, 1344.0], [52.9, 1344.0], [53.0, 1344.0], [53.1, 1344.0], [53.2, 1344.0], [53.3, 1344.0], [53.4, 1351.0], [53.5, 1351.0], [53.6, 1351.0], [53.7, 1351.0], [53.8, 1351.0], [53.9, 1351.0], [54.0, 1351.0], [54.1, 1351.0], [54.2, 1351.0], [54.3, 1351.0], [54.4, 1351.0], [54.5, 1356.0], [54.6, 1356.0], [54.7, 1356.0], [54.8, 1356.0], [54.9, 1356.0], [55.0, 1356.0], [55.1, 1356.0], [55.2, 1356.0], [55.3, 1356.0], [55.4, 1356.0], [55.5, 1356.0], [55.6, 1362.0], [55.7, 1362.0], [55.8, 1362.0], [55.9, 1362.0], [56.0, 1362.0], [56.1, 1362.0], [56.2, 1362.0], [56.3, 1362.0], [56.4, 1362.0], [56.5, 1362.0], [56.6, 1362.0], [56.7, 1378.0], [56.8, 1378.0], [56.9, 1378.0], [57.0, 1378.0], [57.1, 1378.0], [57.2, 1378.0], [57.3, 1378.0], [57.4, 1378.0], [57.5, 1378.0], [57.6, 1378.0], [57.7, 1378.0], [57.8, 1393.0], [57.9, 1393.0], [58.0, 1393.0], [58.1, 1393.0], [58.2, 1393.0], [58.3, 1393.0], [58.4, 1393.0], [58.5, 1393.0], [58.6, 1393.0], [58.7, 1393.0], [58.8, 1393.0], [58.9, 1412.0], [59.0, 1412.0], [59.1, 1412.0], [59.2, 1412.0], [59.3, 1412.0], [59.4, 1412.0], [59.5, 1412.0], [59.6, 1412.0], [59.7, 1412.0], [59.8, 1412.0], [59.9, 1412.0], [60.0, 1412.0], [60.1, 1417.0], [60.2, 1417.0], [60.3, 1417.0], [60.4, 1417.0], [60.5, 1417.0], [60.6, 1417.0], [60.7, 1417.0], [60.8, 1417.0], [60.9, 1417.0], [61.0, 1417.0], [61.1, 1417.0], [61.2, 1442.0], [61.3, 1442.0], [61.4, 1442.0], [61.5, 1442.0], [61.6, 1442.0], [61.7, 1442.0], [61.8, 1442.0], [61.9, 1442.0], [62.0, 1442.0], [62.1, 1442.0], [62.2, 1442.0], [62.3, 1492.0], [62.4, 1492.0], [62.5, 1492.0], [62.6, 1492.0], [62.7, 1492.0], [62.8, 1492.0], [62.9, 1492.0], [63.0, 1492.0], [63.1, 1492.0], [63.2, 1492.0], [63.3, 1492.0], [63.4, 1506.0], [63.5, 1506.0], [63.6, 1506.0], [63.7, 1506.0], [63.8, 1506.0], [63.9, 1506.0], [64.0, 1506.0], [64.1, 1506.0], [64.2, 1506.0], [64.3, 1506.0], [64.4, 1506.0], [64.5, 1598.0], [64.6, 1598.0], [64.7, 1598.0], [64.8, 1598.0], [64.9, 1598.0], [65.0, 1598.0], [65.1, 1598.0], [65.2, 1598.0], [65.3, 1598.0], [65.4, 1598.0], [65.5, 1598.0], [65.6, 1634.0], [65.7, 1634.0], [65.8, 1634.0], [65.9, 1634.0], [66.0, 1634.0], [66.1, 1634.0], [66.2, 1634.0], [66.3, 1634.0], [66.4, 1634.0], [66.5, 1634.0], [66.6, 1634.0], [66.7, 1653.0], [66.8, 1653.0], [66.9, 1653.0], [67.0, 1653.0], [67.1, 1653.0], [67.2, 1653.0], [67.3, 1653.0], [67.4, 1653.0], [67.5, 1653.0], [67.6, 1653.0], [67.7, 1653.0], [67.8, 1682.0], [67.9, 1682.0], [68.0, 1682.0], [68.1, 1682.0], [68.2, 1682.0], [68.3, 1682.0], [68.4, 1682.0], [68.5, 1682.0], [68.6, 1682.0], [68.7, 1682.0], [68.8, 1682.0], [68.9, 1753.0], [69.0, 1753.0], [69.1, 1753.0], [69.2, 1753.0], [69.3, 1753.0], [69.4, 1753.0], [69.5, 1753.0], [69.6, 1753.0], [69.7, 1753.0], [69.8, 1753.0], [69.9, 1753.0], [70.0, 1753.0], [70.1, 1759.0], [70.2, 1759.0], [70.3, 1759.0], [70.4, 1759.0], [70.5, 1759.0], [70.6, 1759.0], [70.7, 1759.0], [70.8, 1759.0], [70.9, 1759.0], [71.0, 1759.0], [71.1, 1759.0], [71.2, 1784.0], [71.3, 1784.0], [71.4, 1784.0], [71.5, 1784.0], [71.6, 1784.0], [71.7, 1784.0], [71.8, 1784.0], [71.9, 1784.0], [72.0, 1784.0], [72.1, 1784.0], [72.2, 1784.0], [72.3, 1888.0], [72.4, 1888.0], [72.5, 1888.0], [72.6, 1888.0], [72.7, 1888.0], [72.8, 1888.0], [72.9, 1888.0], [73.0, 1888.0], [73.1, 1888.0], [73.2, 1888.0], [73.3, 1888.0], [73.4, 2079.0], [73.5, 2079.0], [73.6, 2079.0], [73.7, 2079.0], [73.8, 2079.0], [73.9, 2079.0], [74.0, 2079.0], [74.1, 2079.0], [74.2, 2079.0], [74.3, 2079.0], [74.4, 2079.0], [74.5, 2216.0], [74.6, 2216.0], [74.7, 2216.0], [74.8, 2216.0], [74.9, 2216.0], [75.0, 2216.0], [75.1, 2216.0], [75.2, 2216.0], [75.3, 2216.0], [75.4, 2216.0], [75.5, 2216.0], [75.6, 2419.0], [75.7, 2419.0], [75.8, 2419.0], [75.9, 2419.0], [76.0, 2419.0], [76.1, 2419.0], [76.2, 2419.0], [76.3, 2419.0], [76.4, 2419.0], [76.5, 2419.0], [76.6, 2419.0], [76.7, 2557.0], [76.8, 2557.0], [76.9, 2557.0], [77.0, 2557.0], [77.1, 2557.0], [77.2, 2557.0], [77.3, 2557.0], [77.4, 2557.0], [77.5, 2557.0], [77.6, 2557.0], [77.7, 2557.0], [77.8, 2657.0], [77.9, 2657.0], [78.0, 2657.0], [78.1, 2657.0], [78.2, 2657.0], [78.3, 2657.0], [78.4, 2657.0], [78.5, 2657.0], [78.6, 2657.0], [78.7, 2657.0], [78.8, 2657.0], [78.9, 2693.0], [79.0, 2693.0], [79.1, 2693.0], [79.2, 2693.0], [79.3, 2693.0], [79.4, 2693.0], [79.5, 2693.0], [79.6, 2693.0], [79.7, 2693.0], [79.8, 2693.0], [79.9, 2693.0], [80.0, 2693.0], [80.1, 2706.0], [80.2, 2706.0], [80.3, 2706.0], [80.4, 2706.0], [80.5, 2706.0], [80.6, 2706.0], [80.7, 2706.0], [80.8, 2706.0], [80.9, 2706.0], [81.0, 2706.0], [81.1, 2706.0], [81.2, 2781.0], [81.3, 2781.0], [81.4, 2781.0], [81.5, 2781.0], [81.6, 2781.0], [81.7, 2781.0], [81.8, 2781.0], [81.9, 2781.0], [82.0, 2781.0], [82.1, 2781.0], [82.2, 2781.0], [82.3, 2811.0], [82.4, 2811.0], [82.5, 2811.0], [82.6, 2811.0], [82.7, 2811.0], [82.8, 2811.0], [82.9, 2811.0], [83.0, 2811.0], [83.1, 2811.0], [83.2, 2811.0], [83.3, 2811.0], [83.4, 2852.0], [83.5, 2852.0], [83.6, 2852.0], [83.7, 2852.0], [83.8, 2852.0], [83.9, 2852.0], [84.0, 2852.0], [84.1, 2852.0], [84.2, 2852.0], [84.3, 2852.0], [84.4, 2852.0], [84.5, 2853.0], [84.6, 2853.0], [84.7, 2853.0], [84.8, 2853.0], [84.9, 2853.0], [85.0, 2853.0], [85.1, 2853.0], [85.2, 2853.0], [85.3, 2853.0], [85.4, 2853.0], [85.5, 2853.0], [85.6, 2919.0], [85.7, 2919.0], [85.8, 2919.0], [85.9, 2919.0], [86.0, 2919.0], [86.1, 2919.0], [86.2, 2919.0], [86.3, 2919.0], [86.4, 2919.0], [86.5, 2919.0], [86.6, 2919.0], [86.7, 3109.0], [86.8, 3109.0], [86.9, 3109.0], [87.0, 3109.0], [87.1, 3109.0], [87.2, 3109.0], [87.3, 3109.0], [87.4, 3109.0], [87.5, 3109.0], [87.6, 3109.0], [87.7, 3109.0], [87.8, 3181.0], [87.9, 3181.0], [88.0, 3181.0], [88.1, 3181.0], [88.2, 3181.0], [88.3, 3181.0], [88.4, 3181.0], [88.5, 3181.0], [88.6, 3181.0], [88.7, 3181.0], [88.8, 3181.0], [88.9, 3338.0], [89.0, 3338.0], [89.1, 3338.0], [89.2, 3338.0], [89.3, 3338.0], [89.4, 3338.0], [89.5, 3338.0], [89.6, 3338.0], [89.7, 3338.0], [89.8, 3338.0], [89.9, 3338.0], [90.0, 3338.0], [90.1, 3353.0], [90.2, 3353.0], [90.3, 3353.0], [90.4, 3353.0], [90.5, 3353.0], [90.6, 3353.0], [90.7, 3353.0], [90.8, 3353.0], [90.9, 3353.0], [91.0, 3353.0], [91.1, 3353.0], [91.2, 3360.0], [91.3, 3360.0], [91.4, 3360.0], [91.5, 3360.0], [91.6, 3360.0], [91.7, 3360.0], [91.8, 3360.0], [91.9, 3360.0], [92.0, 3360.0], [92.1, 3360.0], [92.2, 3360.0], [92.3, 3371.0], [92.4, 3371.0], [92.5, 3371.0], [92.6, 3371.0], [92.7, 3371.0], [92.8, 3371.0], [92.9, 3371.0], [93.0, 3371.0], [93.1, 3371.0], [93.2, 3371.0], [93.3, 3371.0], [93.4, 3456.0], [93.5, 3456.0], [93.6, 3456.0], [93.7, 3456.0], [93.8, 3456.0], [93.9, 3456.0], [94.0, 3456.0], [94.1, 3456.0], [94.2, 3456.0], [94.3, 3456.0], [94.4, 3456.0], [94.5, 3758.0], [94.6, 3758.0], [94.7, 3758.0], [94.8, 3758.0], [94.9, 3758.0], [95.0, 3758.0], [95.1, 3758.0], [95.2, 3758.0], [95.3, 3758.0], [95.4, 3758.0], [95.5, 3758.0], [95.6, 3861.0], [95.7, 3861.0], [95.8, 3861.0], [95.9, 3861.0], [96.0, 3861.0], [96.1, 3861.0], [96.2, 3861.0], [96.3, 3861.0], [96.4, 3861.0], [96.5, 3861.0], [96.6, 3861.0], [96.7, 4134.0], [96.8, 4134.0], [96.9, 4134.0], [97.0, 4134.0], [97.1, 4134.0], [97.2, 4134.0], [97.3, 4134.0], [97.4, 4134.0], [97.5, 4134.0], [97.6, 4134.0], [97.7, 4134.0], [97.8, 4336.0], [97.9, 4336.0], [98.0, 4336.0], [98.1, 4336.0], [98.2, 4336.0], [98.3, 4336.0], [98.4, 4336.0], [98.5, 4336.0], [98.6, 4336.0], [98.7, 4336.0], [98.8, 4336.0], [98.9, 6713.0], [99.0, 6713.0], [99.1, 6713.0], [99.2, 6713.0], [99.3, 6713.0], [99.4, 6713.0], [99.5, 6713.0], [99.6, 6713.0], [99.7, 6713.0], [99.8, 6713.0], [99.9, 6713.0], [100.0, 6713.0]], "isOverall": false, "label": "PurchaseTicket", "isController": false}, {"data": [[0.0, 589.0], [0.1, 589.0], [0.2, 589.0], [0.3, 589.0], [0.4, 589.0], [0.5, 589.0], [0.6, 589.0], [0.7, 589.0], [0.8, 589.0], [0.9, 589.0], [1.0, 589.0], [1.1, 589.0], [1.2, 626.0], [1.3, 626.0], [1.4, 626.0], [1.5, 626.0], [1.6, 626.0], [1.7, 626.0], [1.8, 626.0], [1.9, 626.0], [2.0, 626.0], [2.1, 626.0], [2.2, 626.0], [2.3, 671.0], [2.4, 671.0], [2.5, 671.0], [2.6, 671.0], [2.7, 671.0], [2.8, 671.0], [2.9, 671.0], [3.0, 671.0], [3.1, 671.0], [3.2, 671.0], [3.3, 671.0], [3.4, 679.0], [3.5, 679.0], [3.6, 679.0], [3.7, 679.0], [3.8, 679.0], [3.9, 679.0], [4.0, 679.0], [4.1, 679.0], [4.2, 679.0], [4.3, 679.0], [4.4, 679.0], [4.5, 717.0], [4.6, 717.0], [4.7, 717.0], [4.8, 717.0], [4.9, 717.0], [5.0, 717.0], [5.1, 717.0], [5.2, 717.0], [5.3, 717.0], [5.4, 717.0], [5.5, 717.0], [5.6, 730.0], [5.7, 730.0], [5.8, 730.0], [5.9, 730.0], [6.0, 730.0], [6.1, 730.0], [6.2, 730.0], [6.3, 730.0], [6.4, 730.0], [6.5, 730.0], [6.6, 730.0], [6.7, 734.0], [6.8, 734.0], [6.9, 734.0], [7.0, 734.0], [7.1, 734.0], [7.2, 734.0], [7.3, 734.0], [7.4, 734.0], [7.5, 734.0], [7.6, 734.0], [7.7, 734.0], [7.8, 753.0], [7.9, 753.0], [8.0, 753.0], [8.1, 753.0], [8.2, 753.0], [8.3, 753.0], [8.4, 753.0], [8.5, 753.0], [8.6, 753.0], [8.7, 753.0], [8.8, 753.0], [8.9, 758.0], [9.0, 758.0], [9.1, 758.0], [9.2, 758.0], [9.3, 758.0], [9.4, 758.0], [9.5, 758.0], [9.6, 758.0], [9.7, 758.0], [9.8, 758.0], [9.9, 758.0], [10.0, 852.0], [10.1, 852.0], [10.2, 852.0], [10.3, 852.0], [10.4, 852.0], [10.5, 852.0], [10.6, 852.0], [10.7, 852.0], [10.8, 852.0], [10.9, 852.0], [11.0, 852.0], [11.1, 852.0], [11.2, 878.0], [11.3, 878.0], [11.4, 878.0], [11.5, 878.0], [11.6, 878.0], [11.7, 878.0], [11.8, 878.0], [11.9, 878.0], [12.0, 878.0], [12.1, 878.0], [12.2, 878.0], [12.3, 907.0], [12.4, 907.0], [12.5, 907.0], [12.6, 907.0], [12.7, 907.0], [12.8, 907.0], [12.9, 907.0], [13.0, 907.0], [13.1, 907.0], [13.2, 907.0], [13.3, 907.0], [13.4, 940.0], [13.5, 940.0], [13.6, 940.0], [13.7, 940.0], [13.8, 940.0], [13.9, 940.0], [14.0, 940.0], [14.1, 940.0], [14.2, 940.0], [14.3, 940.0], [14.4, 940.0], [14.5, 952.0], [14.6, 952.0], [14.7, 952.0], [14.8, 952.0], [14.9, 952.0], [15.0, 952.0], [15.1, 952.0], [15.2, 952.0], [15.3, 952.0], [15.4, 952.0], [15.5, 952.0], [15.6, 965.0], [15.7, 965.0], [15.8, 965.0], [15.9, 965.0], [16.0, 965.0], [16.1, 965.0], [16.2, 965.0], [16.3, 965.0], [16.4, 965.0], [16.5, 965.0], [16.6, 965.0], [16.7, 971.0], [16.8, 971.0], [16.9, 971.0], [17.0, 971.0], [17.1, 971.0], [17.2, 971.0], [17.3, 971.0], [17.4, 971.0], [17.5, 971.0], [17.6, 971.0], [17.7, 971.0], [17.8, 1001.0], [17.9, 1001.0], [18.0, 1001.0], [18.1, 1001.0], [18.2, 1001.0], [18.3, 1001.0], [18.4, 1001.0], [18.5, 1001.0], [18.6, 1001.0], [18.7, 1001.0], [18.8, 1001.0], [18.9, 1008.0], [19.0, 1008.0], [19.1, 1008.0], [19.2, 1008.0], [19.3, 1008.0], [19.4, 1008.0], [19.5, 1008.0], [19.6, 1008.0], [19.7, 1008.0], [19.8, 1008.0], [19.9, 1008.0], [20.0, 1021.0], [20.1, 1021.0], [20.2, 1021.0], [20.3, 1021.0], [20.4, 1021.0], [20.5, 1021.0], [20.6, 1021.0], [20.7, 1021.0], [20.8, 1021.0], [20.9, 1021.0], [21.0, 1021.0], [21.1, 1021.0], [21.2, 1044.0], [21.3, 1044.0], [21.4, 1044.0], [21.5, 1044.0], [21.6, 1044.0], [21.7, 1044.0], [21.8, 1044.0], [21.9, 1044.0], [22.0, 1044.0], [22.1, 1044.0], [22.2, 1044.0], [22.3, 1047.0], [22.4, 1047.0], [22.5, 1047.0], [22.6, 1047.0], [22.7, 1047.0], [22.8, 1047.0], [22.9, 1047.0], [23.0, 1047.0], [23.1, 1047.0], [23.2, 1047.0], [23.3, 1047.0], [23.4, 1059.0], [23.5, 1059.0], [23.6, 1059.0], [23.7, 1059.0], [23.8, 1059.0], [23.9, 1059.0], [24.0, 1059.0], [24.1, 1059.0], [24.2, 1059.0], [24.3, 1059.0], [24.4, 1059.0], [24.5, 1072.0], [24.6, 1072.0], [24.7, 1072.0], [24.8, 1072.0], [24.9, 1072.0], [25.0, 1072.0], [25.1, 1072.0], [25.2, 1072.0], [25.3, 1072.0], [25.4, 1072.0], [25.5, 1072.0], [25.6, 1079.0], [25.7, 1079.0], [25.8, 1079.0], [25.9, 1079.0], [26.0, 1079.0], [26.1, 1079.0], [26.2, 1079.0], [26.3, 1079.0], [26.4, 1079.0], [26.5, 1079.0], [26.6, 1079.0], [26.7, 1099.0], [26.8, 1099.0], [26.9, 1099.0], [27.0, 1099.0], [27.1, 1099.0], [27.2, 1099.0], [27.3, 1099.0], [27.4, 1099.0], [27.5, 1099.0], [27.6, 1099.0], [27.7, 1099.0], [27.8, 1124.0], [27.9, 1124.0], [28.0, 1124.0], [28.1, 1124.0], [28.2, 1124.0], [28.3, 1124.0], [28.4, 1124.0], [28.5, 1124.0], [28.6, 1124.0], [28.7, 1124.0], [28.8, 1124.0], [28.9, 1133.0], [29.0, 1133.0], [29.1, 1133.0], [29.2, 1133.0], [29.3, 1133.0], [29.4, 1133.0], [29.5, 1133.0], [29.6, 1133.0], [29.7, 1133.0], [29.8, 1133.0], [29.9, 1133.0], [30.0, 1134.0], [30.1, 1134.0], [30.2, 1134.0], [30.3, 1134.0], [30.4, 1134.0], [30.5, 1134.0], [30.6, 1134.0], [30.7, 1134.0], [30.8, 1134.0], [30.9, 1134.0], [31.0, 1134.0], [31.1, 1134.0], [31.2, 1163.0], [31.3, 1163.0], [31.4, 1163.0], [31.5, 1163.0], [31.6, 1163.0], [31.7, 1163.0], [31.8, 1163.0], [31.9, 1163.0], [32.0, 1163.0], [32.1, 1163.0], [32.2, 1163.0], [32.3, 1172.0], [32.4, 1172.0], [32.5, 1172.0], [32.6, 1172.0], [32.7, 1172.0], [32.8, 1172.0], [32.9, 1172.0], [33.0, 1172.0], [33.1, 1172.0], [33.2, 1172.0], [33.3, 1172.0], [33.4, 1189.0], [33.5, 1189.0], [33.6, 1189.0], [33.7, 1189.0], [33.8, 1189.0], [33.9, 1189.0], [34.0, 1189.0], [34.1, 1189.0], [34.2, 1189.0], [34.3, 1189.0], [34.4, 1189.0], [34.5, 1205.0], [34.6, 1205.0], [34.7, 1205.0], [34.8, 1205.0], [34.9, 1205.0], [35.0, 1205.0], [35.1, 1205.0], [35.2, 1205.0], [35.3, 1205.0], [35.4, 1205.0], [35.5, 1205.0], [35.6, 1217.0], [35.7, 1217.0], [35.8, 1217.0], [35.9, 1217.0], [36.0, 1217.0], [36.1, 1217.0], [36.2, 1217.0], [36.3, 1217.0], [36.4, 1217.0], [36.5, 1217.0], [36.6, 1217.0], [36.7, 1223.0], [36.8, 1223.0], [36.9, 1223.0], [37.0, 1223.0], [37.1, 1223.0], [37.2, 1223.0], [37.3, 1223.0], [37.4, 1223.0], [37.5, 1223.0], [37.6, 1223.0], [37.7, 1223.0], [37.8, 1256.0], [37.9, 1256.0], [38.0, 1256.0], [38.1, 1256.0], [38.2, 1256.0], [38.3, 1256.0], [38.4, 1256.0], [38.5, 1256.0], [38.6, 1256.0], [38.7, 1256.0], [38.8, 1256.0], [38.9, 1267.0], [39.0, 1267.0], [39.1, 1267.0], [39.2, 1267.0], [39.3, 1267.0], [39.4, 1267.0], [39.5, 1267.0], [39.6, 1267.0], [39.7, 1267.0], [39.8, 1267.0], [39.9, 1267.0], [40.0, 1267.0], [40.1, 1274.0], [40.2, 1274.0], [40.3, 1274.0], [40.4, 1274.0], [40.5, 1274.0], [40.6, 1274.0], [40.7, 1274.0], [40.8, 1274.0], [40.9, 1274.0], [41.0, 1274.0], [41.1, 1274.0], [41.2, 1274.0], [41.3, 1274.0], [41.4, 1274.0], [41.5, 1274.0], [41.6, 1274.0], [41.7, 1274.0], [41.8, 1274.0], [41.9, 1274.0], [42.0, 1274.0], [42.1, 1274.0], [42.2, 1274.0], [42.3, 1291.0], [42.4, 1291.0], [42.5, 1291.0], [42.6, 1291.0], [42.7, 1291.0], [42.8, 1291.0], [42.9, 1291.0], [43.0, 1291.0], [43.1, 1291.0], [43.2, 1291.0], [43.3, 1291.0], [43.4, 1292.0], [43.5, 1292.0], [43.6, 1292.0], [43.7, 1292.0], [43.8, 1292.0], [43.9, 1292.0], [44.0, 1292.0], [44.1, 1292.0], [44.2, 1292.0], [44.3, 1292.0], [44.4, 1292.0], [44.5, 1322.0], [44.6, 1322.0], [44.7, 1322.0], [44.8, 1322.0], [44.9, 1322.0], [45.0, 1322.0], [45.1, 1322.0], [45.2, 1322.0], [45.3, 1322.0], [45.4, 1322.0], [45.5, 1322.0], [45.6, 1327.0], [45.7, 1327.0], [45.8, 1327.0], [45.9, 1327.0], [46.0, 1327.0], [46.1, 1327.0], [46.2, 1327.0], [46.3, 1327.0], [46.4, 1327.0], [46.5, 1327.0], [46.6, 1327.0], [46.7, 1328.0], [46.8, 1328.0], [46.9, 1328.0], [47.0, 1328.0], [47.1, 1328.0], [47.2, 1328.0], [47.3, 1328.0], [47.4, 1328.0], [47.5, 1328.0], [47.6, 1328.0], [47.7, 1328.0], [47.8, 1386.0], [47.9, 1386.0], [48.0, 1386.0], [48.1, 1386.0], [48.2, 1386.0], [48.3, 1386.0], [48.4, 1386.0], [48.5, 1386.0], [48.6, 1386.0], [48.7, 1386.0], [48.8, 1386.0], [48.9, 1386.0], [49.0, 1386.0], [49.1, 1386.0], [49.2, 1386.0], [49.3, 1386.0], [49.4, 1386.0], [49.5, 1386.0], [49.6, 1386.0], [49.7, 1386.0], [49.8, 1386.0], [49.9, 1386.0], [50.0, 1386.0], [50.1, 1393.0], [50.2, 1393.0], [50.3, 1393.0], [50.4, 1393.0], [50.5, 1393.0], [50.6, 1393.0], [50.7, 1393.0], [50.8, 1393.0], [50.9, 1393.0], [51.0, 1393.0], [51.1, 1393.0], [51.2, 1410.0], [51.3, 1410.0], [51.4, 1410.0], [51.5, 1410.0], [51.6, 1410.0], [51.7, 1410.0], [51.8, 1410.0], [51.9, 1410.0], [52.0, 1410.0], [52.1, 1410.0], [52.2, 1410.0], [52.3, 1471.0], [52.4, 1471.0], [52.5, 1471.0], [52.6, 1471.0], [52.7, 1471.0], [52.8, 1471.0], [52.9, 1471.0], [53.0, 1471.0], [53.1, 1471.0], [53.2, 1471.0], [53.3, 1471.0], [53.4, 1612.0], [53.5, 1612.0], [53.6, 1612.0], [53.7, 1612.0], [53.8, 1612.0], [53.9, 1612.0], [54.0, 1612.0], [54.1, 1612.0], [54.2, 1612.0], [54.3, 1612.0], [54.4, 1612.0], [54.5, 1758.0], [54.6, 1758.0], [54.7, 1758.0], [54.8, 1758.0], [54.9, 1758.0], [55.0, 1758.0], [55.1, 1758.0], [55.2, 1758.0], [55.3, 1758.0], [55.4, 1758.0], [55.5, 1758.0], [55.6, 1776.0], [55.7, 1776.0], [55.8, 1776.0], [55.9, 1776.0], [56.0, 1776.0], [56.1, 1776.0], [56.2, 1776.0], [56.3, 1776.0], [56.4, 1776.0], [56.5, 1776.0], [56.6, 1776.0], [56.7, 1776.0], [56.8, 1776.0], [56.9, 1776.0], [57.0, 1776.0], [57.1, 1776.0], [57.2, 1776.0], [57.3, 1776.0], [57.4, 1776.0], [57.5, 1776.0], [57.6, 1776.0], [57.7, 1776.0], [57.8, 1779.0], [57.9, 1779.0], [58.0, 1779.0], [58.1, 1779.0], [58.2, 1779.0], [58.3, 1779.0], [58.4, 1779.0], [58.5, 1779.0], [58.6, 1779.0], [58.7, 1779.0], [58.8, 1779.0], [58.9, 1886.0], [59.0, 1886.0], [59.1, 1886.0], [59.2, 1886.0], [59.3, 1886.0], [59.4, 1886.0], [59.5, 1886.0], [59.6, 1886.0], [59.7, 1886.0], [59.8, 1886.0], [59.9, 1886.0], [60.0, 1886.0], [60.1, 2102.0], [60.2, 2102.0], [60.3, 2102.0], [60.4, 2102.0], [60.5, 2102.0], [60.6, 2102.0], [60.7, 2102.0], [60.8, 2102.0], [60.9, 2102.0], [61.0, 2102.0], [61.1, 2102.0], [61.2, 2138.0], [61.3, 2138.0], [61.4, 2138.0], [61.5, 2138.0], [61.6, 2138.0], [61.7, 2138.0], [61.8, 2138.0], [61.9, 2138.0], [62.0, 2138.0], [62.1, 2138.0], [62.2, 2138.0], [62.3, 2207.0], [62.4, 2207.0], [62.5, 2207.0], [62.6, 2207.0], [62.7, 2207.0], [62.8, 2207.0], [62.9, 2207.0], [63.0, 2207.0], [63.1, 2207.0], [63.2, 2207.0], [63.3, 2207.0], [63.4, 2279.0], [63.5, 2279.0], [63.6, 2279.0], [63.7, 2279.0], [63.8, 2279.0], [63.9, 2279.0], [64.0, 2279.0], [64.1, 2279.0], [64.2, 2279.0], [64.3, 2279.0], [64.4, 2279.0], [64.5, 2357.0], [64.6, 2357.0], [64.7, 2357.0], [64.8, 2357.0], [64.9, 2357.0], [65.0, 2357.0], [65.1, 2357.0], [65.2, 2357.0], [65.3, 2357.0], [65.4, 2357.0], [65.5, 2357.0], [65.6, 2390.0], [65.7, 2390.0], [65.8, 2390.0], [65.9, 2390.0], [66.0, 2390.0], [66.1, 2390.0], [66.2, 2390.0], [66.3, 2390.0], [66.4, 2390.0], [66.5, 2390.0], [66.6, 2390.0], [66.7, 2580.0], [66.8, 2580.0], [66.9, 2580.0], [67.0, 2580.0], [67.1, 2580.0], [67.2, 2580.0], [67.3, 2580.0], [67.4, 2580.0], [67.5, 2580.0], [67.6, 2580.0], [67.7, 2580.0], [67.8, 2639.0], [67.9, 2639.0], [68.0, 2639.0], [68.1, 2639.0], [68.2, 2639.0], [68.3, 2639.0], [68.4, 2639.0], [68.5, 2639.0], [68.6, 2639.0], [68.7, 2639.0], [68.8, 2639.0], [68.9, 2739.0], [69.0, 2739.0], [69.1, 2739.0], [69.2, 2739.0], [69.3, 2739.0], [69.4, 2739.0], [69.5, 2739.0], [69.6, 2739.0], [69.7, 2739.0], [69.8, 2739.0], [69.9, 2739.0], [70.0, 2739.0], [70.1, 3076.0], [70.2, 3076.0], [70.3, 3076.0], [70.4, 3076.0], [70.5, 3076.0], [70.6, 3076.0], [70.7, 3076.0], [70.8, 3076.0], [70.9, 3076.0], [71.0, 3076.0], [71.1, 3076.0], [71.2, 3077.0], [71.3, 3077.0], [71.4, 3077.0], [71.5, 3077.0], [71.6, 3077.0], [71.7, 3077.0], [71.8, 3077.0], [71.9, 3077.0], [72.0, 3077.0], [72.1, 3077.0], [72.2, 3077.0], [72.3, 3078.0], [72.4, 3078.0], [72.5, 3078.0], [72.6, 3078.0], [72.7, 3078.0], [72.8, 3078.0], [72.9, 3078.0], [73.0, 3078.0], [73.1, 3078.0], [73.2, 3078.0], [73.3, 3078.0], [73.4, 3173.0], [73.5, 3173.0], [73.6, 3173.0], [73.7, 3173.0], [73.8, 3173.0], [73.9, 3173.0], [74.0, 3173.0], [74.1, 3173.0], [74.2, 3173.0], [74.3, 3173.0], [74.4, 3173.0], [74.5, 3184.0], [74.6, 3184.0], [74.7, 3184.0], [74.8, 3184.0], [74.9, 3184.0], [75.0, 3184.0], [75.1, 3184.0], [75.2, 3184.0], [75.3, 3184.0], [75.4, 3184.0], [75.5, 3184.0], [75.6, 3234.0], [75.7, 3234.0], [75.8, 3234.0], [75.9, 3234.0], [76.0, 3234.0], [76.1, 3234.0], [76.2, 3234.0], [76.3, 3234.0], [76.4, 3234.0], [76.5, 3234.0], [76.6, 3234.0], [76.7, 3240.0], [76.8, 3240.0], [76.9, 3240.0], [77.0, 3240.0], [77.1, 3240.0], [77.2, 3240.0], [77.3, 3240.0], [77.4, 3240.0], [77.5, 3240.0], [77.6, 3240.0], [77.7, 3240.0], [77.8, 3288.0], [77.9, 3288.0], [78.0, 3288.0], [78.1, 3288.0], [78.2, 3288.0], [78.3, 3288.0], [78.4, 3288.0], [78.5, 3288.0], [78.6, 3288.0], [78.7, 3288.0], [78.8, 3288.0], [78.9, 3314.0], [79.0, 3314.0], [79.1, 3314.0], [79.2, 3314.0], [79.3, 3314.0], [79.4, 3314.0], [79.5, 3314.0], [79.6, 3314.0], [79.7, 3314.0], [79.8, 3314.0], [79.9, 3314.0], [80.0, 3314.0], [80.1, 3459.0], [80.2, 3459.0], [80.3, 3459.0], [80.4, 3459.0], [80.5, 3459.0], [80.6, 3459.0], [80.7, 3459.0], [80.8, 3459.0], [80.9, 3459.0], [81.0, 3459.0], [81.1, 3459.0], [81.2, 3486.0], [81.3, 3486.0], [81.4, 3486.0], [81.5, 3486.0], [81.6, 3486.0], [81.7, 3486.0], [81.8, 3486.0], [81.9, 3486.0], [82.0, 3486.0], [82.1, 3486.0], [82.2, 3486.0], [82.3, 3529.0], [82.4, 3529.0], [82.5, 3529.0], [82.6, 3529.0], [82.7, 3529.0], [82.8, 3529.0], [82.9, 3529.0], [83.0, 3529.0], [83.1, 3529.0], [83.2, 3529.0], [83.3, 3529.0], [83.4, 3592.0], [83.5, 3592.0], [83.6, 3592.0], [83.7, 3592.0], [83.8, 3592.0], [83.9, 3592.0], [84.0, 3592.0], [84.1, 3592.0], [84.2, 3592.0], [84.3, 3592.0], [84.4, 3592.0], [84.5, 3840.0], [84.6, 3840.0], [84.7, 3840.0], [84.8, 3840.0], [84.9, 3840.0], [85.0, 3840.0], [85.1, 3840.0], [85.2, 3840.0], [85.3, 3840.0], [85.4, 3840.0], [85.5, 3840.0], [85.6, 3852.0], [85.7, 3852.0], [85.8, 3852.0], [85.9, 3852.0], [86.0, 3852.0], [86.1, 3852.0], [86.2, 3852.0], [86.3, 3852.0], [86.4, 3852.0], [86.5, 3852.0], [86.6, 3852.0], [86.7, 3976.0], [86.8, 3976.0], [86.9, 3976.0], [87.0, 3976.0], [87.1, 3976.0], [87.2, 3976.0], [87.3, 3976.0], [87.4, 3976.0], [87.5, 3976.0], [87.6, 3976.0], [87.7, 3976.0], [87.8, 4006.0], [87.9, 4006.0], [88.0, 4006.0], [88.1, 4006.0], [88.2, 4006.0], [88.3, 4006.0], [88.4, 4006.0], [88.5, 4006.0], [88.6, 4006.0], [88.7, 4006.0], [88.8, 4006.0], [88.9, 4172.0], [89.0, 4172.0], [89.1, 4172.0], [89.2, 4172.0], [89.3, 4172.0], [89.4, 4172.0], [89.5, 4172.0], [89.6, 4172.0], [89.7, 4172.0], [89.8, 4172.0], [89.9, 4172.0], [90.0, 4172.0], [90.1, 4529.0], [90.2, 4529.0], [90.3, 4529.0], [90.4, 4529.0], [90.5, 4529.0], [90.6, 4529.0], [90.7, 4529.0], [90.8, 4529.0], [90.9, 4529.0], [91.0, 4529.0], [91.1, 4529.0], [91.2, 4672.0], [91.3, 4672.0], [91.4, 4672.0], [91.5, 4672.0], [91.6, 4672.0], [91.7, 4672.0], [91.8, 4672.0], [91.9, 4672.0], [92.0, 4672.0], [92.1, 4672.0], [92.2, 4672.0], [92.3, 4739.0], [92.4, 4739.0], [92.5, 4739.0], [92.6, 4739.0], [92.7, 4739.0], [92.8, 4739.0], [92.9, 4739.0], [93.0, 4739.0], [93.1, 4739.0], [93.2, 4739.0], [93.3, 4739.0], [93.4, 5601.0], [93.5, 5601.0], [93.6, 5601.0], [93.7, 5601.0], [93.8, 5601.0], [93.9, 5601.0], [94.0, 5601.0], [94.1, 5601.0], [94.2, 5601.0], [94.3, 5601.0], [94.4, 5601.0], [94.5, 5918.0], [94.6, 5918.0], [94.7, 5918.0], [94.8, 5918.0], [94.9, 5918.0], [95.0, 5918.0], [95.1, 5918.0], [95.2, 5918.0], [95.3, 5918.0], [95.4, 5918.0], [95.5, 5918.0], [95.6, 6568.0], [95.7, 6568.0], [95.8, 6568.0], [95.9, 6568.0], [96.0, 6568.0], [96.1, 6568.0], [96.2, 6568.0], [96.3, 6568.0], [96.4, 6568.0], [96.5, 6568.0], [96.6, 6568.0], [96.7, 7019.0], [96.8, 7019.0], [96.9, 7019.0], [97.0, 7019.0], [97.1, 7019.0], [97.2, 7019.0], [97.3, 7019.0], [97.4, 7019.0], [97.5, 7019.0], [97.6, 7019.0], [97.7, 7019.0], [97.8, 7157.0], [97.9, 7157.0], [98.0, 7157.0], [98.1, 7157.0], [98.2, 7157.0], [98.3, 7157.0], [98.4, 7157.0], [98.5, 7157.0], [98.6, 7157.0], [98.7, 7157.0], [98.8, 7157.0], [98.9, 7312.0], [99.0, 7312.0], [99.1, 7312.0], [99.2, 7312.0], [99.3, 7312.0], [99.4, 7312.0], [99.5, 7312.0], [99.6, 7312.0], [99.7, 7312.0], [99.8, 7312.0], [99.9, 7312.0], [100.0, 7312.0]], "isOverall": false, "label": "ReserveFlight", "isController": false}, {"data": [[0.0, 528.0], [0.1, 528.0], [0.2, 528.0], [0.3, 528.0], [0.4, 528.0], [0.5, 528.0], [0.6, 528.0], [0.7, 541.0], [0.8, 541.0], [0.9, 541.0], [1.0, 541.0], [1.1, 541.0], [1.2, 541.0], [1.3, 541.0], [1.4, 559.0], [1.5, 559.0], [1.6, 559.0], [1.7, 559.0], [1.8, 559.0], [1.9, 559.0], [2.0, 569.0], [2.1, 569.0], [2.2, 569.0], [2.3, 569.0], [2.4, 569.0], [2.5, 569.0], [2.6, 569.0], [2.7, 610.0], [2.8, 610.0], [2.9, 610.0], [3.0, 610.0], [3.1, 610.0], [3.2, 610.0], [3.3, 610.0], [3.4, 622.0], [3.5, 622.0], [3.6, 622.0], [3.7, 622.0], [3.8, 622.0], [3.9, 622.0], [4.0, 622.0], [4.1, 622.0], [4.2, 622.0], [4.3, 622.0], [4.4, 622.0], [4.5, 622.0], [4.6, 622.0], [4.7, 625.0], [4.8, 625.0], [4.9, 625.0], [5.0, 625.0], [5.1, 625.0], [5.2, 625.0], [5.3, 625.0], [5.4, 661.0], [5.5, 661.0], [5.6, 661.0], [5.7, 661.0], [5.8, 661.0], [5.9, 661.0], [6.0, 700.0], [6.1, 700.0], [6.2, 700.0], [6.3, 700.0], [6.4, 700.0], [6.5, 700.0], [6.6, 700.0], [6.7, 783.0], [6.8, 783.0], [6.9, 783.0], [7.0, 783.0], [7.1, 783.0], [7.2, 783.0], [7.3, 783.0], [7.4, 1036.0], [7.5, 1036.0], [7.6, 1036.0], [7.7, 1036.0], [7.8, 1036.0], [7.9, 1036.0], [8.0, 1193.0], [8.1, 1193.0], [8.2, 1193.0], [8.3, 1193.0], [8.4, 1193.0], [8.5, 1193.0], [8.6, 1193.0], [8.7, 1215.0], [8.8, 1215.0], [8.9, 1215.0], [9.0, 1215.0], [9.1, 1215.0], [9.2, 1215.0], [9.3, 1215.0], [9.4, 1228.0], [9.5, 1228.0], [9.6, 1228.0], [9.7, 1228.0], [9.8, 1228.0], [9.9, 1228.0], [10.0, 1242.0], [10.1, 1242.0], [10.2, 1242.0], [10.3, 1242.0], [10.4, 1242.0], [10.5, 1242.0], [10.6, 1242.0], [10.7, 1266.0], [10.8, 1266.0], [10.9, 1266.0], [11.0, 1266.0], [11.1, 1266.0], [11.2, 1266.0], [11.3, 1266.0], [11.4, 1279.0], [11.5, 1279.0], [11.6, 1279.0], [11.7, 1279.0], [11.8, 1279.0], [11.9, 1279.0], [12.0, 1368.0], [12.1, 1368.0], [12.2, 1368.0], [12.3, 1368.0], [12.4, 1368.0], [12.5, 1368.0], [12.6, 1368.0], [12.7, 1381.0], [12.8, 1381.0], [12.9, 1381.0], [13.0, 1381.0], [13.1, 1381.0], [13.2, 1381.0], [13.3, 1381.0], [13.4, 1383.0], [13.5, 1383.0], [13.6, 1383.0], [13.7, 1383.0], [13.8, 1383.0], [13.9, 1383.0], [14.0, 1387.0], [14.1, 1387.0], [14.2, 1387.0], [14.3, 1387.0], [14.4, 1387.0], [14.5, 1387.0], [14.6, 1387.0], [14.7, 1404.0], [14.8, 1404.0], [14.9, 1404.0], [15.0, 1404.0], [15.1, 1404.0], [15.2, 1404.0], [15.3, 1404.0], [15.4, 1417.0], [15.5, 1417.0], [15.6, 1417.0], [15.7, 1417.0], [15.8, 1417.0], [15.9, 1417.0], [16.0, 1419.0], [16.1, 1419.0], [16.2, 1419.0], [16.3, 1419.0], [16.4, 1419.0], [16.5, 1419.0], [16.6, 1419.0], [16.7, 1440.0], [16.8, 1440.0], [16.9, 1440.0], [17.0, 1440.0], [17.1, 1440.0], [17.2, 1440.0], [17.3, 1440.0], [17.4, 1445.0], [17.5, 1445.0], [17.6, 1445.0], [17.7, 1445.0], [17.8, 1445.0], [17.9, 1445.0], [18.0, 1455.0], [18.1, 1455.0], [18.2, 1455.0], [18.3, 1455.0], [18.4, 1455.0], [18.5, 1455.0], [18.6, 1455.0], [18.7, 1456.0], [18.8, 1456.0], [18.9, 1456.0], [19.0, 1456.0], [19.1, 1456.0], [19.2, 1456.0], [19.3, 1456.0], [19.4, 1466.0], [19.5, 1466.0], [19.6, 1466.0], [19.7, 1466.0], [19.8, 1466.0], [19.9, 1466.0], [20.0, 1491.0], [20.1, 1491.0], [20.2, 1491.0], [20.3, 1491.0], [20.4, 1491.0], [20.5, 1491.0], [20.6, 1491.0], [20.7, 1517.0], [20.8, 1517.0], [20.9, 1517.0], [21.0, 1517.0], [21.1, 1517.0], [21.2, 1517.0], [21.3, 1517.0], [21.4, 1534.0], [21.5, 1534.0], [21.6, 1534.0], [21.7, 1534.0], [21.8, 1534.0], [21.9, 1534.0], [22.0, 1534.0], [22.1, 1554.0], [22.2, 1554.0], [22.3, 1554.0], [22.4, 1554.0], [22.5, 1554.0], [22.6, 1554.0], [22.7, 1575.0], [22.8, 1575.0], [22.9, 1575.0], [23.0, 1575.0], [23.1, 1575.0], [23.2, 1575.0], [23.3, 1575.0], [23.4, 1599.0], [23.5, 1599.0], [23.6, 1599.0], [23.7, 1599.0], [23.8, 1599.0], [23.9, 1599.0], [24.0, 1599.0], [24.1, 1613.0], [24.2, 1613.0], [24.3, 1613.0], [24.4, 1613.0], [24.5, 1613.0], [24.6, 1613.0], [24.7, 1637.0], [24.8, 1637.0], [24.9, 1637.0], [25.0, 1637.0], [25.1, 1637.0], [25.2, 1637.0], [25.3, 1637.0], [25.4, 1699.0], [25.5, 1699.0], [25.6, 1699.0], [25.7, 1699.0], [25.8, 1699.0], [25.9, 1699.0], [26.0, 1699.0], [26.1, 1700.0], [26.2, 1700.0], [26.3, 1700.0], [26.4, 1700.0], [26.5, 1700.0], [26.6, 1700.0], [26.7, 1726.0], [26.8, 1726.0], [26.9, 1726.0], [27.0, 1726.0], [27.1, 1726.0], [27.2, 1726.0], [27.3, 1726.0], [27.4, 1757.0], [27.5, 1757.0], [27.6, 1757.0], [27.7, 1757.0], [27.8, 1757.0], [27.9, 1757.0], [28.0, 1757.0], [28.1, 1776.0], [28.2, 1776.0], [28.3, 1776.0], [28.4, 1776.0], [28.5, 1776.0], [28.6, 1776.0], [28.7, 1794.0], [28.8, 1794.0], [28.9, 1794.0], [29.0, 1794.0], [29.1, 1794.0], [29.2, 1794.0], [29.3, 1794.0], [29.4, 1797.0], [29.5, 1797.0], [29.6, 1797.0], [29.7, 1797.0], [29.8, 1797.0], [29.9, 1797.0], [30.0, 1797.0], [30.1, 1811.0], [30.2, 1811.0], [30.3, 1811.0], [30.4, 1811.0], [30.5, 1811.0], [30.6, 1811.0], [30.7, 1845.0], [30.8, 1845.0], [30.9, 1845.0], [31.0, 1845.0], [31.1, 1845.0], [31.2, 1845.0], [31.3, 1845.0], [31.4, 1864.0], [31.5, 1864.0], [31.6, 1864.0], [31.7, 1864.0], [31.8, 1864.0], [31.9, 1864.0], [32.0, 1864.0], [32.1, 1870.0], [32.2, 1870.0], [32.3, 1870.0], [32.4, 1870.0], [32.5, 1870.0], [32.6, 1870.0], [32.7, 1890.0], [32.8, 1890.0], [32.9, 1890.0], [33.0, 1890.0], [33.1, 1890.0], [33.2, 1890.0], [33.3, 1890.0], [33.4, 1893.0], [33.5, 1893.0], [33.6, 1893.0], [33.7, 1893.0], [33.8, 1893.0], [33.9, 1893.0], [34.0, 1893.0], [34.1, 1931.0], [34.2, 1931.0], [34.3, 1931.0], [34.4, 1931.0], [34.5, 1931.0], [34.6, 1931.0], [34.7, 1936.0], [34.8, 1936.0], [34.9, 1936.0], [35.0, 1936.0], [35.1, 1936.0], [35.2, 1936.0], [35.3, 1936.0], [35.4, 1943.0], [35.5, 1943.0], [35.6, 1943.0], [35.7, 1943.0], [35.8, 1943.0], [35.9, 1943.0], [36.0, 1943.0], [36.1, 1947.0], [36.2, 1947.0], [36.3, 1947.0], [36.4, 1947.0], [36.5, 1947.0], [36.6, 1947.0], [36.7, 1998.0], [36.8, 1998.0], [36.9, 1998.0], [37.0, 1998.0], [37.1, 1998.0], [37.2, 1998.0], [37.3, 1998.0], [37.4, 2015.0], [37.5, 2015.0], [37.6, 2015.0], [37.7, 2015.0], [37.8, 2015.0], [37.9, 2015.0], [38.0, 2020.0], [38.1, 2020.0], [38.2, 2020.0], [38.3, 2020.0], [38.4, 2020.0], [38.5, 2020.0], [38.6, 2020.0], [38.7, 2038.0], [38.8, 2038.0], [38.9, 2038.0], [39.0, 2038.0], [39.1, 2038.0], [39.2, 2038.0], [39.3, 2038.0], [39.4, 2049.0], [39.5, 2049.0], [39.6, 2049.0], [39.7, 2049.0], [39.8, 2049.0], [39.9, 2049.0], [40.0, 2056.0], [40.1, 2056.0], [40.2, 2056.0], [40.3, 2056.0], [40.4, 2056.0], [40.5, 2056.0], [40.6, 2056.0], [40.7, 2069.0], [40.8, 2069.0], [40.9, 2069.0], [41.0, 2069.0], [41.1, 2069.0], [41.2, 2069.0], [41.3, 2069.0], [41.4, 2073.0], [41.5, 2073.0], [41.6, 2073.0], [41.7, 2073.0], [41.8, 2073.0], [41.9, 2073.0], [42.0, 2083.0], [42.1, 2083.0], [42.2, 2083.0], [42.3, 2083.0], [42.4, 2083.0], [42.5, 2083.0], [42.6, 2083.0], [42.7, 2084.0], [42.8, 2084.0], [42.9, 2084.0], [43.0, 2084.0], [43.1, 2084.0], [43.2, 2084.0], [43.3, 2084.0], [43.4, 2098.0], [43.5, 2098.0], [43.6, 2098.0], [43.7, 2098.0], [43.8, 2098.0], [43.9, 2098.0], [44.0, 2102.0], [44.1, 2102.0], [44.2, 2102.0], [44.3, 2102.0], [44.4, 2102.0], [44.5, 2102.0], [44.6, 2102.0], [44.7, 2109.0], [44.8, 2109.0], [44.9, 2109.0], [45.0, 2109.0], [45.1, 2109.0], [45.2, 2109.0], [45.3, 2109.0], [45.4, 2119.0], [45.5, 2119.0], [45.6, 2119.0], [45.7, 2119.0], [45.8, 2119.0], [45.9, 2119.0], [46.0, 2121.0], [46.1, 2121.0], [46.2, 2121.0], [46.3, 2121.0], [46.4, 2121.0], [46.5, 2121.0], [46.6, 2121.0], [46.7, 2125.0], [46.8, 2125.0], [46.9, 2125.0], [47.0, 2125.0], [47.1, 2125.0], [47.2, 2125.0], [47.3, 2125.0], [47.4, 2135.0], [47.5, 2135.0], [47.6, 2135.0], [47.7, 2135.0], [47.8, 2135.0], [47.9, 2135.0], [48.0, 2155.0], [48.1, 2155.0], [48.2, 2155.0], [48.3, 2155.0], [48.4, 2155.0], [48.5, 2155.0], [48.6, 2155.0], [48.7, 2164.0], [48.8, 2164.0], [48.9, 2164.0], [49.0, 2164.0], [49.1, 2164.0], [49.2, 2164.0], [49.3, 2164.0], [49.4, 2229.0], [49.5, 2229.0], [49.6, 2229.0], [49.7, 2229.0], [49.8, 2229.0], [49.9, 2229.0], [50.0, 2266.0], [50.1, 2266.0], [50.2, 2266.0], [50.3, 2266.0], [50.4, 2266.0], [50.5, 2266.0], [50.6, 2266.0], [50.7, 2426.0], [50.8, 2426.0], [50.9, 2426.0], [51.0, 2426.0], [51.1, 2426.0], [51.2, 2426.0], [51.3, 2426.0], [51.4, 2590.0], [51.5, 2590.0], [51.6, 2590.0], [51.7, 2590.0], [51.8, 2590.0], [51.9, 2590.0], [52.0, 2621.0], [52.1, 2621.0], [52.2, 2621.0], [52.3, 2621.0], [52.4, 2621.0], [52.5, 2621.0], [52.6, 2621.0], [52.7, 2651.0], [52.8, 2651.0], [52.9, 2651.0], [53.0, 2651.0], [53.1, 2651.0], [53.2, 2651.0], [53.3, 2651.0], [53.4, 2709.0], [53.5, 2709.0], [53.6, 2709.0], [53.7, 2709.0], [53.8, 2709.0], [53.9, 2709.0], [54.0, 2718.0], [54.1, 2718.0], [54.2, 2718.0], [54.3, 2718.0], [54.4, 2718.0], [54.5, 2718.0], [54.6, 2718.0], [54.7, 2745.0], [54.8, 2745.0], [54.9, 2745.0], [55.0, 2745.0], [55.1, 2745.0], [55.2, 2745.0], [55.3, 2745.0], [55.4, 2811.0], [55.5, 2811.0], [55.6, 2811.0], [55.7, 2811.0], [55.8, 2811.0], [55.9, 2811.0], [56.0, 2811.0], [56.1, 2811.0], [56.2, 2811.0], [56.3, 2811.0], [56.4, 2811.0], [56.5, 2811.0], [56.6, 2811.0], [56.7, 2837.0], [56.8, 2837.0], [56.9, 2837.0], [57.0, 2837.0], [57.1, 2837.0], [57.2, 2837.0], [57.3, 2837.0], [57.4, 2885.0], [57.5, 2885.0], [57.6, 2885.0], [57.7, 2885.0], [57.8, 2885.0], [57.9, 2885.0], [58.0, 2991.0], [58.1, 2991.0], [58.2, 2991.0], [58.3, 2991.0], [58.4, 2991.0], [58.5, 2991.0], [58.6, 2991.0], [58.7, 3114.0], [58.8, 3114.0], [58.9, 3114.0], [59.0, 3114.0], [59.1, 3114.0], [59.2, 3114.0], [59.3, 3114.0], [59.4, 3138.0], [59.5, 3138.0], [59.6, 3138.0], [59.7, 3138.0], [59.8, 3138.0], [59.9, 3138.0], [60.0, 3140.0], [60.1, 3140.0], [60.2, 3140.0], [60.3, 3140.0], [60.4, 3140.0], [60.5, 3140.0], [60.6, 3140.0], [60.7, 3150.0], [60.8, 3150.0], [60.9, 3150.0], [61.0, 3150.0], [61.1, 3150.0], [61.2, 3150.0], [61.3, 3150.0], [61.4, 3199.0], [61.5, 3199.0], [61.6, 3199.0], [61.7, 3199.0], [61.8, 3199.0], [61.9, 3199.0], [62.0, 3237.0], [62.1, 3237.0], [62.2, 3237.0], [62.3, 3237.0], [62.4, 3237.0], [62.5, 3237.0], [62.6, 3237.0], [62.7, 3257.0], [62.8, 3257.0], [62.9, 3257.0], [63.0, 3257.0], [63.1, 3257.0], [63.2, 3257.0], [63.3, 3257.0], [63.4, 3265.0], [63.5, 3265.0], [63.6, 3265.0], [63.7, 3265.0], [63.8, 3265.0], [63.9, 3265.0], [64.0, 3290.0], [64.1, 3290.0], [64.2, 3290.0], [64.3, 3290.0], [64.4, 3290.0], [64.5, 3290.0], [64.6, 3290.0], [64.7, 3357.0], [64.8, 3357.0], [64.9, 3357.0], [65.0, 3357.0], [65.1, 3357.0], [65.2, 3357.0], [65.3, 3357.0], [65.4, 3415.0], [65.5, 3415.0], [65.6, 3415.0], [65.7, 3415.0], [65.8, 3415.0], [65.9, 3415.0], [66.0, 3421.0], [66.1, 3421.0], [66.2, 3421.0], [66.3, 3421.0], [66.4, 3421.0], [66.5, 3421.0], [66.6, 3421.0], [66.7, 3466.0], [66.8, 3466.0], [66.9, 3466.0], [67.0, 3466.0], [67.1, 3466.0], [67.2, 3466.0], [67.3, 3466.0], [67.4, 3499.0], [67.5, 3499.0], [67.6, 3499.0], [67.7, 3499.0], [67.8, 3499.0], [67.9, 3499.0], [68.0, 3502.0], [68.1, 3502.0], [68.2, 3502.0], [68.3, 3502.0], [68.4, 3502.0], [68.5, 3502.0], [68.6, 3502.0], [68.7, 3737.0], [68.8, 3737.0], [68.9, 3737.0], [69.0, 3737.0], [69.1, 3737.0], [69.2, 3737.0], [69.3, 3737.0], [69.4, 3981.0], [69.5, 3981.0], [69.6, 3981.0], [69.7, 3981.0], [69.8, 3981.0], [69.9, 3981.0], [70.0, 4040.0], [70.1, 4040.0], [70.2, 4040.0], [70.3, 4040.0], [70.4, 4040.0], [70.5, 4040.0], [70.6, 4040.0], [70.7, 4064.0], [70.8, 4064.0], [70.9, 4064.0], [71.0, 4064.0], [71.1, 4064.0], [71.2, 4064.0], [71.3, 4064.0], [71.4, 4074.0], [71.5, 4074.0], [71.6, 4074.0], [71.7, 4074.0], [71.8, 4074.0], [71.9, 4074.0], [72.0, 4098.0], [72.1, 4098.0], [72.2, 4098.0], [72.3, 4098.0], [72.4, 4098.0], [72.5, 4098.0], [72.6, 4098.0], [72.7, 4143.0], [72.8, 4143.0], [72.9, 4143.0], [73.0, 4143.0], [73.1, 4143.0], [73.2, 4143.0], [73.3, 4143.0], [73.4, 4179.0], [73.5, 4179.0], [73.6, 4179.0], [73.7, 4179.0], [73.8, 4179.0], [73.9, 4179.0], [74.0, 4233.0], [74.1, 4233.0], [74.2, 4233.0], [74.3, 4233.0], [74.4, 4233.0], [74.5, 4233.0], [74.6, 4233.0], [74.7, 4301.0], [74.8, 4301.0], [74.9, 4301.0], [75.0, 4301.0], [75.1, 4301.0], [75.2, 4301.0], [75.3, 4301.0], [75.4, 4334.0], [75.5, 4334.0], [75.6, 4334.0], [75.7, 4334.0], [75.8, 4334.0], [75.9, 4334.0], [76.0, 4337.0], [76.1, 4337.0], [76.2, 4337.0], [76.3, 4337.0], [76.4, 4337.0], [76.5, 4337.0], [76.6, 4337.0], [76.7, 4342.0], [76.8, 4342.0], [76.9, 4342.0], [77.0, 4342.0], [77.1, 4342.0], [77.2, 4342.0], [77.3, 4342.0], [77.4, 4353.0], [77.5, 4353.0], [77.6, 4353.0], [77.7, 4353.0], [77.8, 4353.0], [77.9, 4353.0], [78.0, 4353.0], [78.1, 4501.0], [78.2, 4501.0], [78.3, 4501.0], [78.4, 4501.0], [78.5, 4501.0], [78.6, 4501.0], [78.7, 4509.0], [78.8, 4509.0], [78.9, 4509.0], [79.0, 4509.0], [79.1, 4509.0], [79.2, 4509.0], [79.3, 4509.0], [79.4, 4527.0], [79.5, 4527.0], [79.6, 4527.0], [79.7, 4527.0], [79.8, 4527.0], [79.9, 4527.0], [80.0, 4527.0], [80.1, 4570.0], [80.2, 4570.0], [80.3, 4570.0], [80.4, 4570.0], [80.5, 4570.0], [80.6, 4570.0], [80.7, 4604.0], [80.8, 4604.0], [80.9, 4604.0], [81.0, 4604.0], [81.1, 4604.0], [81.2, 4604.0], [81.3, 4604.0], [81.4, 4712.0], [81.5, 4712.0], [81.6, 4712.0], [81.7, 4712.0], [81.8, 4712.0], [81.9, 4712.0], [82.0, 4712.0], [82.1, 4795.0], [82.2, 4795.0], [82.3, 4795.0], [82.4, 4795.0], [82.5, 4795.0], [82.6, 4795.0], [82.7, 4858.0], [82.8, 4858.0], [82.9, 4858.0], [83.0, 4858.0], [83.1, 4858.0], [83.2, 4858.0], [83.3, 4858.0], [83.4, 4912.0], [83.5, 4912.0], [83.6, 4912.0], [83.7, 4912.0], [83.8, 4912.0], [83.9, 4912.0], [84.0, 4912.0], [84.1, 4976.0], [84.2, 4976.0], [84.3, 4976.0], [84.4, 4976.0], [84.5, 4976.0], [84.6, 4976.0], [84.7, 5294.0], [84.8, 5294.0], [84.9, 5294.0], [85.0, 5294.0], [85.1, 5294.0], [85.2, 5294.0], [85.3, 5294.0], [85.4, 5311.0], [85.5, 5311.0], [85.6, 5311.0], [85.7, 5311.0], [85.8, 5311.0], [85.9, 5311.0], [86.0, 5311.0], [86.1, 5484.0], [86.2, 5484.0], [86.3, 5484.0], [86.4, 5484.0], [86.5, 5484.0], [86.6, 5484.0], [86.7, 5581.0], [86.8, 5581.0], [86.9, 5581.0], [87.0, 5581.0], [87.1, 5581.0], [87.2, 5581.0], [87.3, 5581.0], [87.4, 5602.0], [87.5, 5602.0], [87.6, 5602.0], [87.7, 5602.0], [87.8, 5602.0], [87.9, 5602.0], [88.0, 5602.0], [88.1, 5622.0], [88.2, 5622.0], [88.3, 5622.0], [88.4, 5622.0], [88.5, 5622.0], [88.6, 5622.0], [88.7, 5683.0], [88.8, 5683.0], [88.9, 5683.0], [89.0, 5683.0], [89.1, 5683.0], [89.2, 5683.0], [89.3, 5683.0], [89.4, 5685.0], [89.5, 5685.0], [89.6, 5685.0], [89.7, 5685.0], [89.8, 5685.0], [89.9, 5685.0], [90.0, 5685.0], [90.1, 5899.0], [90.2, 5899.0], [90.3, 5899.0], [90.4, 5899.0], [90.5, 5899.0], [90.6, 5899.0], [90.7, 6197.0], [90.8, 6197.0], [90.9, 6197.0], [91.0, 6197.0], [91.1, 6197.0], [91.2, 6197.0], [91.3, 6197.0], [91.4, 6568.0], [91.5, 6568.0], [91.6, 6568.0], [91.7, 6568.0], [91.8, 6568.0], [91.9, 6568.0], [92.0, 6568.0], [92.1, 6657.0], [92.2, 6657.0], [92.3, 6657.0], [92.4, 6657.0], [92.5, 6657.0], [92.6, 6657.0], [92.7, 6677.0], [92.8, 6677.0], [92.9, 6677.0], [93.0, 6677.0], [93.1, 6677.0], [93.2, 6677.0], [93.3, 6677.0], [93.4, 6987.0], [93.5, 6987.0], [93.6, 6987.0], [93.7, 6987.0], [93.8, 6987.0], [93.9, 6987.0], [94.0, 6987.0], [94.1, 7587.0], [94.2, 7587.0], [94.3, 7587.0], [94.4, 7587.0], [94.5, 7587.0], [94.6, 7587.0], [94.7, 7664.0], [94.8, 7664.0], [94.9, 7664.0], [95.0, 7664.0], [95.1, 7664.0], [95.2, 7664.0], [95.3, 7664.0], [95.4, 7801.0], [95.5, 7801.0], [95.6, 7801.0], [95.7, 7801.0], [95.8, 7801.0], [95.9, 7801.0], [96.0, 7801.0], [96.1, 7977.0], [96.2, 7977.0], [96.3, 7977.0], [96.4, 7977.0], [96.5, 7977.0], [96.6, 7977.0], [96.7, 9231.0], [96.8, 9231.0], [96.9, 9231.0], [97.0, 9231.0], [97.1, 9231.0], [97.2, 9231.0], [97.3, 9231.0], [97.4, 9396.0], [97.5, 9396.0], [97.6, 9396.0], [97.7, 9396.0], [97.8, 9396.0], [97.9, 9396.0], [98.0, 9396.0], [98.1, 10246.0], [98.2, 10246.0], [98.3, 10246.0], [98.4, 10246.0], [98.5, 10246.0], [98.6, 10246.0], [98.7, 10288.0], [98.8, 10288.0], [98.9, 10288.0], [99.0, 10288.0], [99.1, 10288.0], [99.2, 10288.0], [99.3, 10288.0], [99.4, 10402.0], [99.5, 10402.0], [99.6, 10402.0], [99.7, 10402.0], [99.8, 10402.0], [99.9, 10402.0], [100.0, 10402.0]], "isOverall": false, "label": "ConfirmFlight", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 150.0, "series": [{"data": [[9100.0, 1.0], [600.0, 5.0], [700.0, 5.0], [12400.0, 1.0], [800.0, 6.0], [13100.0, 1.0], [900.0, 6.0], [1000.0, 3.0], [1100.0, 1.0], [1200.0, 3.0], [1400.0, 1.0], [1600.0, 1.0], [1700.0, 2.0], [1900.0, 1.0], [2500.0, 1.0], [2900.0, 3.0], [3100.0, 4.0], [3200.0, 4.0], [3300.0, 3.0], [3400.0, 2.0], [3500.0, 1.0], [4800.0, 1.0], [5200.0, 1.0], [5600.0, 1.0], [6000.0, 1.0], [400.0, 6.0], [6600.0, 1.0], [6700.0, 3.0], [6800.0, 3.0], [6900.0, 1.0], [7000.0, 1.0], [7400.0, 2.0], [7200.0, 1.0], [7500.0, 1.0], [7900.0, 1.0], [500.0, 11.0]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[0.0, 150.0]], "isOverall": false, "label": "Debug Sampler", "isController": false}, {"data": [[600.0, 4.0], [700.0, 13.0], [800.0, 4.0], [900.0, 2.0], [1000.0, 3.0], [1100.0, 5.0], [1200.0, 6.0], [1300.0, 15.0], [1400.0, 4.0], [1500.0, 2.0], [1600.0, 3.0], [1700.0, 3.0], [1800.0, 1.0], [2000.0, 1.0], [2200.0, 1.0], [2400.0, 1.0], [2500.0, 1.0], [2600.0, 2.0], [2700.0, 2.0], [2800.0, 3.0], [2900.0, 1.0], [3100.0, 2.0], [3300.0, 4.0], [3400.0, 1.0], [3700.0, 1.0], [3800.0, 1.0], [4300.0, 1.0], [4100.0, 1.0], [6700.0, 1.0], [500.0, 1.0]], "isOverall": false, "label": "PurchaseTicket", "isController": false}, {"data": [[600.0, 3.0], [700.0, 5.0], [800.0, 2.0], [900.0, 5.0], [1000.0, 9.0], [1100.0, 6.0], [1200.0, 9.0], [1300.0, 6.0], [1400.0, 2.0], [1600.0, 1.0], [1700.0, 4.0], [1800.0, 1.0], [2100.0, 2.0], [2200.0, 2.0], [2300.0, 2.0], [2500.0, 1.0], [2600.0, 1.0], [2700.0, 1.0], [3000.0, 3.0], [3100.0, 2.0], [3200.0, 3.0], [3300.0, 1.0], [3400.0, 2.0], [3500.0, 2.0], [3800.0, 2.0], [3900.0, 1.0], [4000.0, 1.0], [4100.0, 1.0], [4500.0, 1.0], [4600.0, 1.0], [4700.0, 1.0], [5600.0, 1.0], [5900.0, 1.0], [6500.0, 1.0], [7100.0, 1.0], [7000.0, 1.0], [7300.0, 1.0], [500.0, 1.0]], "isOverall": false, "label": "ReserveFlight", "isController": false}, {"data": [[600.0, 5.0], [700.0, 2.0], [1000.0, 1.0], [1100.0, 1.0], [1200.0, 5.0], [1300.0, 4.0], [1400.0, 9.0], [1500.0, 5.0], [1600.0, 3.0], [1700.0, 6.0], [1800.0, 6.0], [1900.0, 5.0], [2000.0, 10.0], [2100.0, 8.0], [2200.0, 2.0], [2400.0, 1.0], [2500.0, 1.0], [2600.0, 2.0], [2700.0, 3.0], [2800.0, 4.0], [2900.0, 1.0], [3100.0, 5.0], [3200.0, 4.0], [3300.0, 1.0], [3400.0, 4.0], [3500.0, 1.0], [3700.0, 1.0], [3900.0, 1.0], [4000.0, 4.0], [4300.0, 5.0], [4200.0, 1.0], [4100.0, 2.0], [4500.0, 4.0], [4600.0, 1.0], [4700.0, 2.0], [4800.0, 1.0], [4900.0, 2.0], [5300.0, 1.0], [5200.0, 1.0], [5400.0, 1.0], [5500.0, 1.0], [5600.0, 4.0], [5800.0, 1.0], [6100.0, 1.0], [6600.0, 2.0], [6500.0, 1.0], [6900.0, 1.0], [7500.0, 1.0], [7600.0, 1.0], [7800.0, 1.0], [7900.0, 1.0], [9200.0, 1.0], [9300.0, 1.0], [10200.0, 2.0], [10400.0, 1.0], [500.0, 4.0]], "isOverall": false, "label": "ConfirmFlight", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 13100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 235.0, "series": [{"data": [[0.0, 156.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 177.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 235.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 2.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.66687488E12, "maxY": 36.48666666666664, "series": [{"data": [[1.66687494E12, 1.0], [1.66687488E12, 24.68715083798883]], "isOverall": false, "label": "Reservation", "isController": false}, {"data": [[1.66687488E12, 19.144444444444446]], "isOverall": false, "label": "setUp Thread Group", "isController": false}, {"data": [[1.66687494E12, 36.48666666666664]], "isOverall": false, "label": "tearDown Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66687494E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 6911.5, "series": [{"data": [[2.0, 5573.0], [3.0, 921.0], [4.0, 1054.0], [5.0, 762.0], [6.0, 785.0], [7.0, 2919.0], [8.0, 883.0], [9.0, 3310.5], [10.0, 2294.0], [11.0, 2492.5], [12.0, 800.0], [13.0, 1710.0], [14.0, 1786.0], [15.0, 5383.0], [16.0, 2188.3333333333335], [1.0, 437.0], [17.0, 927.0], [18.0, 1521.375], [19.0, 2687.0], [20.0, 6375.875], [21.0, 3676.25], [22.0, 3193.0], [23.0, 4274.5], [24.0, 2362.6666666666665], [25.0, 1202.0], [26.0, 1174.0], [28.0, 882.5], [29.0, 994.0], [30.0, 1908.3333333333335]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[19.144444444444446, 2852.011111111112]], "isOverall": false, "label": "HomePage-Aggregated", "isController": false}, {"data": [[33.0, 0.0], [32.0, 1.0], [2.0, 1.0], [35.0, 0.0], [34.0, 0.0], [37.0, 0.5], [36.0, 0.0], [39.0, 0.0], [38.0, 0.0], [41.0, 0.0], [40.0, 0.0], [43.0, 0.0], [45.0, 0.0], [44.0, 0.0], [47.0, 0.33333333333333337], [46.0, 0.0], [49.0, 0.14285714285714288], [48.0, 0.0909090909090909], [3.0, 0.5], [50.0, 0.06896551724137934], [4.0, 0.0], [5.0, 1.0], [6.0, 0.0], [7.0, 0.0], [8.0, 0.0], [9.0, 0.0], [10.0, 0.0], [11.0, 0.0], [12.0, 0.0], [13.0, 0.0], [14.0, 0.0], [15.0, 0.0], [1.0, 0.0], [17.0, 0.0], [18.0, 0.0], [19.0, 0.0], [20.0, 1.0], [21.0, 0.0], [22.0, 1.0], [23.0, 0.0], [24.0, 0.0], [25.0, 0.0], [26.0, 0.0], [27.0, 0.0], [28.0, 0.5], [29.0, 0.0], [30.0, 0.0], [31.0, 0.0]], "isOverall": false, "label": "Debug Sampler", "isController": false}, {"data": [[36.486666666666686, 0.09999999999999999]], "isOverall": false, "label": "Debug Sampler-Aggregated", "isController": false}, {"data": [[2.0, 1080.0], [3.0, 602.0], [4.0, 2455.6666666666665], [5.0, 775.0], [6.0, 3743.0], [7.0, 990.0], [8.0, 2124.5], [9.0, 957.0], [10.0, 1311.0], [11.0, 3353.0], [12.0, 2092.0], [13.0, 2885.5], [14.0, 745.0], [15.0, 732.0], [16.0, 1799.5], [1.0, 1314.0], [17.0, 750.0], [18.0, 803.0], [19.0, 750.0], [20.0, 1888.0], [21.0, 1457.0], [22.0, 1244.0], [23.0, 1217.0], [24.0, 3181.0], [25.0, 1653.0], [26.0, 2216.0], [27.0, 2499.2], [28.0, 1634.0], [29.0, 1334.75], [30.0, 1567.7045454545457]], "isOverall": false, "label": "PurchaseTicket", "isController": false}, {"data": [[22.95555555555556, 1701.9777777777783]], "isOverall": false, "label": "PurchaseTicket-Aggregated", "isController": false}, {"data": [[10.0, 589.0], [12.0, 1675.6666666666667], [3.0, 867.5], [13.0, 1163.0], [14.0, 652.5], [16.0, 2739.0], [1.0, 2279.0], [20.0, 1047.0], [23.0, 1217.0], [25.0, 1205.0], [26.0, 3486.0], [27.0, 1689.0], [28.0, 1256.0], [7.0, 4083.0], [29.0, 1527.6], [30.0, 2466.3965517241386]], "isOverall": false, "label": "ReserveFlight", "isController": false}, {"data": [[26.155555555555555, 2216.644444444445]], "isOverall": false, "label": "ReserveFlight-Aggregated", "isController": false}, {"data": [[33.0, 1554.0], [32.0, 1726.0], [2.0, 541.0], [35.0, 4672.5], [34.0, 1491.0], [37.0, 3728.0], [36.0, 1906.5], [39.0, 4879.333333333333], [38.0, 1404.0], [41.0, 2790.666666666667], [40.0, 3297.2], [43.0, 1489.5], [45.0, 3362.25], [44.0, 2444.5], [47.0, 3803.3333333333335], [46.0, 2625.666666666667], [49.0, 3587.4285714285716], [48.0, 4082.409090909091], [3.0, 972.5], [50.0, 2792.241379310344], [4.0, 2068.5], [5.0, 610.0], [6.0, 700.0], [7.0, 1517.0], [8.0, 623.5], [9.0, 622.0], [10.0, 559.0], [11.0, 6911.5], [12.0, 2811.0], [13.0, 2991.0], [14.0, 3320.3333333333335], [15.0, 5428.5], [1.0, 2745.0], [17.0, 3350.5], [18.0, 3499.0], [19.0, 2969.4], [20.0, 2651.0], [21.0, 5685.0], [22.0, 1797.0], [23.0, 1903.0], [24.0, 2098.0], [25.0, 3263.3333333333335], [26.0, 5657.0], [27.0, 3231.0], [28.0, 5780.0], [29.0, 1943.0], [30.0, 1947.0], [31.0, 1757.0]], "isOverall": false, "label": "ConfirmFlight", "isController": false}, {"data": [[36.486666666666686, 3142.473333333333]], "isOverall": false, "label": "ConfirmFlight-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 50.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2061.983333333333, "minX": 1.66687488E12, "maxY": 10798.133333333333, "series": [{"data": [[1.66687494E12, 7566.116666666667], [1.66687488E12, 10798.133333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.66687494E12, 2061.983333333333], [1.66687488E12, 2647.883333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66687494E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 0.09999999999999999, "minX": 1.66687488E12, "maxY": 3142.473333333333, "series": [{"data": [[1.66687488E12, 2852.011111111112]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[1.66687494E12, 0.09999999999999999]], "isOverall": false, "label": "Debug Sampler", "isController": false}, {"data": [[1.66687494E12, 1314.0], [1.66687488E12, 1706.337078651686]], "isOverall": false, "label": "PurchaseTicket", "isController": false}, {"data": [[1.66687488E12, 2216.644444444445]], "isOverall": false, "label": "ReserveFlight", "isController": false}, {"data": [[1.66687494E12, 3142.473333333333]], "isOverall": false, "label": "ConfirmFlight", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66687494E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.66687488E12, "maxY": 3120.1466666666665, "series": [{"data": [[1.66687488E12, 2555.055555555556]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[1.66687494E12, 0.0]], "isOverall": false, "label": "Debug Sampler", "isController": false}, {"data": [[1.66687494E12, 1286.0], [1.66687488E12, 1685.6516853932594]], "isOverall": false, "label": "PurchaseTicket", "isController": false}, {"data": [[1.66687488E12, 2200.744444444444]], "isOverall": false, "label": "ReserveFlight", "isController": false}, {"data": [[1.66687494E12, 3120.1466666666665]], "isOverall": false, "label": "ConfirmFlight", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66687494E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.66687488E12, "maxY": 1714.5888888888885, "series": [{"data": [[1.66687488E12, 1714.5888888888885]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[1.66687494E12, 0.0]], "isOverall": false, "label": "Debug Sampler", "isController": false}, {"data": [[1.66687494E12, 0.0], [1.66687488E12, 0.0]], "isOverall": false, "label": "PurchaseTicket", "isController": false}, {"data": [[1.66687488E12, 703.8555555555556]], "isOverall": false, "label": "ReserveFlight", "isController": false}, {"data": [[1.66687494E12, 646.8399999999997]], "isOverall": false, "label": "ConfirmFlight", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66687494E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.66687488E12, "maxY": 10402.0, "series": [{"data": [[1.66687494E12, 10402.0], [1.66687488E12, 9166.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.66687494E12, 4561.400000000001], [1.66687488E12, 4754.000000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.66687494E12, 10229.000000000015], [1.66687488E12, 7704.639999999998]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.66687494E12, 5877.599999999995], [1.66687488E12, 6844.4]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.66687494E12, 0.0], [1.66687488E12, 437.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.66687494E12, 528.0], [1.66687488E12, 1328.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66687494E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 559.0, "minX": 1.0, "maxY": 12816.5, "series": [{"data": [[8.0, 602.5], [2.0, 841.0], [9.0, 2960.0], [39.0, 559.0], [11.0, 1070.0], [12.0, 1386.0], [3.0, 1001.0], [13.0, 1327.5], [14.0, 818.5], [15.0, 758.0], [4.0, 1130.5], [1.0, 1314.0], [16.0, 1321.0], [64.0, 608.0], [18.0, 1427.0], [5.0, 987.5], [20.0, 1129.0], [21.0, 1328.0], [22.0, 6691.5], [6.0, 3561.5], [24.0, 850.5], [26.0, 1010.5], [7.0, 973.5], [30.0, 899.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 12816.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 64.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 6691.5, "series": [{"data": [[8.0, 590.0], [2.0, 831.5], [9.0, 2960.0], [39.0, 520.0], [11.0, 1065.0], [12.0, 1386.0], [3.0, 982.0], [13.0, 1327.5], [14.0, 818.5], [15.0, 752.0], [4.0, 1128.5], [1.0, 1286.0], [16.0, 1305.0], [64.0, 607.0], [18.0, 1424.0], [5.0, 970.5], [20.0, 1120.5], [21.0, 1294.5], [22.0, 6691.5], [6.0, 3558.5], [24.0, 849.5], [26.0, 999.5], [7.0, 934.0], [30.0, 898.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 64.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 4.5, "minX": 1.66687488E12, "maxY": 5.0, "series": [{"data": [[1.66687494E12, 5.0], [1.66687488E12, 4.5]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66687494E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.66687488E12, "maxY": 5.016666666666667, "series": [{"data": [[1.66687494E12, 5.016666666666667], [1.66687488E12, 4.45]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.66687488E12, 0.03333333333333333]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66687494E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.66687488E12, "maxY": 2.5, "series": [{"data": [[1.66687494E12, 0.016666666666666666], [1.66687488E12, 1.4833333333333334]], "isOverall": false, "label": "PurchaseTicket-success", "isController": false}, {"data": [[1.66687494E12, 2.5]], "isOverall": false, "label": "ConfirmFlight-success", "isController": false}, {"data": [[1.66687488E12, 1.5]], "isOverall": false, "label": "ReserveFlight-success", "isController": false}, {"data": [[1.66687488E12, 0.03333333333333333]], "isOverall": false, "label": "HomePage-failure", "isController": false}, {"data": [[1.66687494E12, 2.5]], "isOverall": false, "label": "Debug Sampler-success", "isController": false}, {"data": [[1.66687488E12, 1.4666666666666666]], "isOverall": false, "label": "HomePage-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66687494E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.66687488E12, "maxY": 5.016666666666667, "series": [{"data": [[1.66687494E12, 5.016666666666667], [1.66687488E12, 4.45]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.66687488E12, 0.03333333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66687494E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

